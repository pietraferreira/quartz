<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>work/cobra on</title><link>https://pietraferreira.github.io/quartz/tags/work/cobra/</link><description>Recent content in work/cobra on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pietraferreira.github.io/quartz/tags/work/cobra/index.xml" rel="self" type="application/rss+xml"/><item><title>2022-07-25</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-07-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-07-25/</guid><description>flw for example is only supported by 32-bits. Therefore, there is a fail march test which uses rv32i. rv64 doesn&amp;rsquo;t support zcf, so should I still do the same thing?</description></item><item><title>2022-07-26</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-07-26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-07-26/</guid><description>c.flwsp -&amp;gt; zero-extended 6-bit immediate, scaled by 4 (4^6=4096) and the boundary is half of that minus 1, thus 2047.</description></item><item><title>2022-08-02-cobra-report</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-02-cobra-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-02-cobra-report/</guid><description>Assembler Support for the CORE-V Zc* Extension - Report 2nd of August 2022
The Zc* extensions are being carefully tested and the testsuite for Zc* has been expanded.</description></item><item><title>2022-08-08-cobra-report</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-08-cobra-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-08-cobra-report/</guid><description>Assembler Support for the CORE-V Zc* Extension - Report Completed Last Week Verified Zc* with the GNU assembler (gas).</description></item><item><title>2022-08-16</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-16/</guid><description>GCC - https://github.com/pietraferreira/corev-gcc/tree/cobra-stable Binutils-GDB - https://github.com/pietraferreira/corev-binutils-gdb/tree/cobra-stable Newlib - https://sourceware.org/git/newlib-cygwin.git files built with this compiler will misinform the version that is implemented</description></item><item><title>2022-08-17</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-17/</guid><description>Cobra Tasks Fix Issues: Jump table located incorrectly Relaxation (Charlie has submitted a PR) (GCC) Incorrect version Then we can test the linker.</description></item><item><title>2022-08-24</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-24/</guid><description>pull request from your repo to the official core-v-binutils-gdb repo to merge all the assembler/linker work (Pietra?) (REBASE) ✅ 2023-05-08 pull request from your repo to the official core-v-gcc repo to merge all the gcc work (Pietra?</description></item><item><title>Assembler Support for the RISC-V Zc* Extension - Report</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-22-cobra-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-22-cobra-report/</guid><description>Assembler Support for the RISC-V Zc* Extension - Report We&amp;rsquo;ve provided an interim release of the pre-built binaries and any support necessary to use them.</description></item><item><title>Building Cobra</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/building-cobra/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/building-cobra/</guid><description>How to build I have a cobra folder which contains:
1 2 ❯ ls binutils build install logs toolchain Here binutils is my corev-binutils-gdb fork, I just renamed it so the build script can find it.</description></item><item><title>Cobra</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/cobra-hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/cobra-hub/</guid><description>Cheatsheet Notes 1 2 3 4 5 table without ID file.link as &amp;#34;Link&amp;#34;, file.ctime as &amp;#34;Created Time&amp;#34; from #work/cobra WHERE type = &amp;#34;cheatsheet&amp;#34; sort file.</description></item><item><title>How to Manually Check a Test</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/how-to-manually-check-as-test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/how-to-manually-check-as-test/</guid><description>How to Manually Check a Test Instruction listing:
So we have:
1 011u uurr ruud dd00 For example, if we want to test:</description></item></channel></rss>