<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sorting on</title><link>https://pietraferreira.github.io/quartz/tags/sorting/</link><description>Recent content in sorting on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pietraferreira.github.io/quartz/tags/sorting/index.xml" rel="self" type="application/rss+xml"/><item><title>Bubble Sort</title><link>https://pietraferreira.github.io/quartz/notes/general/bubble-sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/bubble-sort/</guid><description>Bubble Sort Bubble sort is $O(n_2)$ meaning it is:
efficient if n is small. efficient if the array is mostly sorted.</description></item><item><title>Radix Sort</title><link>https://pietraferreira.github.io/quartz/notes/university/radix-sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/radix-sort/</guid><description>Radix Sort It is a non-comparison sorting method which only works on binary or integer data.
It takes $O(nb)$ time complexity, where:</description></item><item><title>Selection Sort</title><link>https://pietraferreira.github.io/quartz/notes/university/selection-sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/selection-sort/</guid><description>Selection Sort It sorts an array by repeatedly finding the minimum element from the unsorted part of the array and puts it at the beginning.</description></item><item><title>Shell Sort</title><link>https://pietraferreira.github.io/quartz/notes/general/shell-sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/shell-sort/</guid><description>Shell Sort Shell sort adds one more loop outside bubble sort.
It starts by sorting small overlapping subsets, then makes then smaller but by then the array is mostly sorted.</description></item></channel></rss>