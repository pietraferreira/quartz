<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lists on</title><link>https://pietraferreira.github.io/quartz/tags/lists/</link><description>Recent content in lists on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pietraferreira.github.io/quartz/tags/lists/index.xml" rel="self" type="application/rss+xml"/><item><title>Arrays</title><link>https://pietraferreira.github.io/quartz/notes/university/arrays/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/arrays/</guid><description>Arrays Simplest and most widely used data structure, which maintains the insertion order of elements.
Elements are indexed, meaning the big-O for searching for an index is O(1).</description></item><item><title>Linked List</title><link>https://pietraferreira.github.io/quartz/notes/university/linked-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/linked-list/</guid><description>Linked List It maintains the insertion order of elements, however they are not indexed. When searching, we start with the head and work our way through.</description></item><item><title>Queue</title><link>https://pietraferreira.github.io/quartz/notes/university/queue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/queue/</guid><description>Queue First in, last out (FIFO), double linked list works well. Think of a standard queue, for example at the bank.</description></item><item><title>Stack</title><link>https://pietraferreira.github.io/quartz/notes/general/stack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/stack/</guid><description>Stack Last in, first out (LIFO), simple list works well for this. Think of a stack of plates.</description></item></channel></rss>