<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>UML on</title><link>https://pietraferreira.github.io/quartz/tags/UML/</link><description>Recent content in UML on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pietraferreira.github.io/quartz/tags/UML/index.xml" rel="self" type="application/rss+xml"/><item><title>2022-10-04</title><link>https://pietraferreira.github.io/quartz/notes/daily/2022-10-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/daily/2022-10-04/</guid><description>2022-10-04 Students can:
Register for studies (matriculation) -&amp;gt; involves enrolling Enroll Withdraw Student receives certificate from student office.</description></item><item><title>State Machine Diagrams - Part 1</title><link>https://pietraferreira.github.io/quartz/notes/university/state-machine-diagrams-part1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/state-machine-diagrams-part1/</guid><description>State Machine Diagrams (PART 1) Introduction Every object takes a finite number of different stages during its life.</description></item><item><title>State Machine Diagrams - Part 2</title><link>https://pietraferreira.github.io/quartz/notes/university/state-machine-diagrams-part2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/state-machine-diagrams-part2/</guid><description>State Machine Diagrams (PART 2) Recap: A Simple State Composite State Also known as complex state or nested state.</description></item><item><title>UML @ Classroom - Chapter 3</title><link>https://pietraferreira.github.io/quartz/notes/university/uml-classroom-chap3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/uml-classroom-chap3/</guid><description>UML @ Classroom - Chapter 3 Use Case Diagram Allows to describe the possible usage scenarios (use cases) that a system is developed for.</description></item></channel></rss>