<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>university on</title><link>https://pietraferreira.github.io/quartz/tags/university/</link><description>Recent content in university on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pietraferreira.github.io/quartz/tags/university/index.xml" rel="self" type="application/rss+xml"/><item><title>2022-10-04</title><link>https://pietraferreira.github.io/quartz/notes/daily/2022-10-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/daily/2022-10-04/</guid><description>2022-10-04 Students can:
Register for studies (matriculation) -&amp;gt; involves enrolling Enroll Withdraw Student receives certificate from student office.</description></item><item><title>2022-10-16 - CS2005 Lab 3 (HTTP)</title><link>https://pietraferreira.github.io/quartz/notes/daily/2022-10-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/daily/2022-10-16/</guid><description>CS2005 Lab 3 - HTTP The version of HTTP that the client and the server are running. Is it HTTP version 1.</description></item><item><title>Activity Diagram</title><link>https://pietraferreira.github.io/quartz/notes/university/uml-activity-diagram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/uml-activity-diagram/</guid><description>Introduction The focus of the activity diagram is the procedural processing aspects.
It uses flow-oriented language concepts and it is based on:</description></item><item><title>alan-turing</title><link>https://pietraferreira.github.io/quartz/notes/general/alan-turing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/alan-turing/</guid><description>Alan Turing Alan Mathison Turing 23rd of June 1912 to 7th of June 1954. Mathematician. Pardoned in 2013. Created the concept of a turing machine.</description></item><item><title>Ant Colony Optimisation and Particle Swarm Optimisation</title><link>https://pietraferreira.github.io/quartz/notes/university/aco-and-pso/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/aco-and-pso/</guid><description>Swarm Intelligence The interaction of many simple parts creating complex behaviour. This means that the net effect of group&amp;rsquo;s collective wisdom is greater than the sum of the individuals.</description></item><item><title>Asymptotic Analysis</title><link>https://pietraferreira.github.io/quartz/notes/university/asymptotic-analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/asymptotic-analysis/</guid><description>The asymptotic analysis of an algorithm determines the running time in Big O notation.
To perform the asymptotic analysis:</description></item><item><title>Brunel - Computer Science Hub</title><link>https://pietraferreira.github.io/quartz/notes/university/university-hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/university-hub/</guid><description>Brunel - Computer Science Hub Here you can find everything related to my university course.
Useful Links Brightspace</description></item><item><title>CS2003 - Exam Revision</title><link>https://pietraferreira.github.io/quartz/notes/university/cs2003-exam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/cs2003-exam/</guid><description>Need to have references.
30 - 40min on questions 1 and 2.
1h on questions 3 and 4.</description></item><item><title>CS2005 - Exam</title><link>https://pietraferreira.github.io/quartz/notes/university/cs2005-exam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/cs2005-exam/</guid><description>4 questions. An answer should be around 500 to 800 words. Study Plan (by ChatGPT) Day 1: Spend 2 hours studying Chapter 1 of Computer Networks, including sections 1.</description></item><item><title>Depth-First Search</title><link>https://pietraferreira.github.io/quartz/notes/university/depth-first-search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/depth-first-search/</guid><description>Depth-First Search It allows us to explore nodes and edges of a graph.
The traversal will go as far as possible down a path until a dead end is reached.</description></item><item><title>Evolutionary Programming</title><link>https://pietraferreira.github.io/quartz/notes/university/evolutionary-programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/evolutionary-programming/</guid><description>Similar to Genetic Algorithms.
The emphasis here is on mutation and there is no crossover.
Every individual mutates, doubling the population.</description></item><item><title>Exam Revision Plan</title><link>https://pietraferreira.github.io/quartz/notes/university/examplan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/examplan/</guid><description>Exam timetable: CS2003 Usability Engineering (04/05) Software Development and Management (10/05) Moodle environment.</description></item><item><title>Foundation of Algorithm Analysis</title><link>https://pietraferreira.github.io/quartz/notes/university/alg-foundation-analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/alg-foundation-analysis/</guid><description>Running time. Pseudo-code. Counting primitive operations. Running Time Varies with the input and typically grows with the input size.</description></item><item><title>Heuristic Seach, Hill Climbing and Simulated Annealing</title><link>https://pietraferreira.github.io/quartz/notes/university/hc-and-sa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/hc-and-sa/</guid><description>Heuristic Search Some difficult problems (NP-hard) cannot be solved in a straightforward manner.
We need to develop approximation algorithms to solve these problems.</description></item><item><title>Introduction to Algorithms</title><link>https://pietraferreira.github.io/quartz/notes/university/alg-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/alg-intro/</guid><description>Introduction to Algorithms An algorithm is a set of steps for solving a problem. It is a well-defined computational procedure that takes some value(s) as input and produces some value(s) as output.</description></item><item><title>Introduction to Genetic Algorithms</title><link>https://pietraferreira.github.io/quartz/notes/university/intro-gen-algorithms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/intro-gen-algorithms/</guid><description>Genetic Algorithms belong to a family of techniques that are inspired from evolution theory.
Each gene is a binary digit.</description></item><item><title>Modules</title><link>https://pietraferreira.github.io/quartz/notes/university/year-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year-2/</guid><description>Modules A list of all the different modules I am taking during my second year.
Year 2 is 1/3 of the final grade!</description></item><item><title>Search and Fitness</title><link>https://pietraferreira.github.io/quartz/notes/university/search-and-fitness/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/search-and-fitness/</guid><description>Definition of a Search Problem For some problems we need to search for a solution from a (usually) very large number of possibilities, search problems.</description></item><item><title>Shortest Path Problem</title><link>https://pietraferreira.github.io/quartz/notes/university/shortest-path-problem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/shortest-path-problem/</guid><description/></item><item><title>Time Complexity</title><link>https://pietraferreira.github.io/quartz/notes/university/time-complexity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/time-complexity/</guid><description>Sorting It is one of the most common tasks in data analysis.
Examples:
Print out a collection of employees sorted by salary.</description></item><item><title>turing-machines</title><link>https://pietraferreira.github.io/quartz/notes/general/turing-machines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/turing-machines/</guid><description>Turing Machines Turning machine manipulate symbols on a strip of tape according to a table of rules and it is capable of implementing any computer algorithm.</description></item><item><title>UE Methods and Techniques - Prototyping, Mockups and Wireframes</title><link>https://pietraferreira.github.io/quartz/notes/university/ue-methods-and-techniques/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/ue-methods-and-techniques/</guid><description>The Sketch in Interaction Design Two requirements approaches when prototyping an interactive system:
Using a formal specification. Developing the specification out of the prototype.</description></item><item><title>UML - All-Together</title><link>https://pietraferreira.github.io/quartz/notes/university/uml-all-together/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/uml-all-together/</guid><description> Notation Elements</description></item><item><title>User Models and Conceptual Design</title><link>https://pietraferreira.github.io/quartz/notes/university/user-models-and-conceptual-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/user-models-and-conceptual-design/</guid><description>User Models and Conceptual Design Making Sense of the World Transparent objects expose their functions, for example a bicycle.
Opaque objects however, hide their functions.</description></item><item><title>User-Centred Design</title><link>https://pietraferreira.github.io/quartz/notes/university/user-centred-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/user-centred-design/</guid><description>It is important to ensure that we meet users needs, this is what user-centered design is all about.
The problem with traditional development is that:</description></item></channel></rss>