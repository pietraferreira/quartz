<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>university on</title><link>https://pietraferreira.github.io/quartz/tags/university/</link><description>Recent content in university on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pietraferreira.github.io/quartz/tags/university/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://pietraferreira.github.io/quartz/notes/university/year-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year-3/</guid><description>A list of all the different modules I am taking during my third year.
Year 3 is 2/3 of the final grade!</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/annotation-computer-networks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/annotation-computer-networks/</guid><description>%%
1 {&amp;#34;created&amp;#34;:&amp;#34;2023-05-08T10:15:34.739Z&amp;#34;,&amp;#34;updated&amp;#34;:&amp;#34;2023-05-08T10:15:34.739Z&amp;#34;,&amp;#34;document&amp;#34;:{&amp;#34;title&amp;#34;:&amp;#34;Computer Networking: A Top-Down Approach, 7th Edition&amp;#34;,&amp;#34;link&amp;#34;:[{&amp;#34;href&amp;#34;:&amp;#34;urn:x-pdf:8ab23c2355d202449f37ee1756d29912&amp;#34;},{&amp;#34;href&amp;#34;:&amp;#34;vault:/notes/documents/computer-networks.pdf&amp;#34;}],&amp;#34;documentFingerprint&amp;#34;:&amp;#34;8ab23c2355d202449f37ee1756d29912&amp;#34;},&amp;#34;uri&amp;#34;:&amp;#34;vault:/notes/documents/computer-networks.pdf&amp;#34;,&amp;#34;target&amp;#34;:[{&amp;#34;source&amp;#34;:&amp;#34;vault:/notes/documents/computer-networks.pdf&amp;#34;,&amp;#34;selector&amp;#34;:[{&amp;#34;type&amp;#34;:&amp;#34;TextPositionSelector&amp;#34;,&amp;#34;start&amp;#34;:50897,&amp;#34;end&amp;#34;:51227},{&amp;#34;type&amp;#34;:&amp;#34;TextQuoteSelector&amp;#34;,&amp;#34;exact&amp;#34;:&amp;#34;Internet Â­standards are developed by the Internet Engineering Task Force(IETF) [IETF 2016].</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/annotation-os/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/annotation-os/</guid><description>%%
1 {&amp;#34;created&amp;#34;:&amp;#34;2023-05-11T16:47:24.682Z&amp;#34;,&amp;#34;updated&amp;#34;:&amp;#34;2023-05-11T16:47:24.682Z&amp;#34;,&amp;#34;document&amp;#34;:{&amp;#34;title&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;link&amp;#34;:[{&amp;#34;href&amp;#34;:&amp;#34;urn:x-pdf:2d9cb7ef5a7a8c9070382769d4774a00&amp;#34;},{&amp;#34;href&amp;#34;:&amp;#34;vault:/notes/documents/os.pdf&amp;#34;}],&amp;#34;documentFingerprint&amp;#34;:&amp;#34;2d9cb7ef5a7a8c9070382769d4774a00&amp;#34;},&amp;#34;uri&amp;#34;:&amp;#34;vault:/notes/documents/os.pdf&amp;#34;,&amp;#34;target&amp;#34;:[{&amp;#34;source&amp;#34;:&amp;#34;vault:/notes/documents/os.pdf&amp;#34;,&amp;#34;selector&amp;#34;:[{&amp;#34;type&amp;#34;:&amp;#34;TextPositionSelector&amp;#34;,&amp;#34;start&amp;#34;:171910,&amp;#34;end&amp;#34;:172096},{&amp;#34;type&amp;#34;:&amp;#34;TextQuoteSelector&amp;#34;,&amp;#34;exact&amp;#34;:&amp;#34;One viewfocuses on the services that the system provides; another, on the interface thatit makes available to users and programmers; a third, on its components andtheir interconnections.</description></item><item><title>2022 11 13</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/2022-11-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/2022-11-13/</guid><description>O5Client O5Server (run O5Server) (run O5Client) SEND &amp;ldquo;O5Server is ready&amp;rdquo; RECEIVE &amp;ldquo;O5Server is ready&amp;rdquo; (accept O5Client connection) WHILE NOT TERMINATED WHILE NOT TERMINATED SEND &amp;ldquo;Welcome to O5AppShop [&amp;hellip;] Choose and option: 1.</description></item><item><title>2022-09-30</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/2022-09-30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/2022-09-30/</guid><description>To mount remote filesystem:
CiscoConnect using academic\2041368 as the login. Then going to Finder -&amp;gt; Go -&amp;gt; Connect to Server&amp;hellip; Connect to v-csfs01.</description></item><item><title>2022-10-04</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2022-10-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2022-10-04/</guid><description>2022-10-04 Students can:
Register for studies (matriculation) -&amp;gt; involves enrolling Enroll Withdraw Student receives certificate from student office.</description></item><item><title>2022-10-16 - CS2005 Lab 3 (HTTP)</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/2022-10-16-lab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/2022-10-16-lab/</guid><description>The version of HTTP that the client and the server are running. Is it HTTP version 1.0 or 1.1? Version 1.</description></item><item><title>2022-10-16 - CS2005 Lab 3 (HTTP)</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/2022-10-16-lab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/2022-10-16-lab/</guid><description>The version of HTTP that the client and the server are running. Is it HTTP version 1.0 or 1.1? Version 1.</description></item><item><title>2022-11-10</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2022-11-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2022-11-10/</guid><description>Quick Meeting with Sammy
13:18 to 13:45
Registration is fully working with a database connected to it, we just don&amp;rsquo;t have the other pages.</description></item><item><title>2022-11-16</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2022-11-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2022-11-16/</guid><description>Meeting with Sammy (and Zeeshan!)
Attendants:
Pietra Zeeshan Sammy 14:06 - 16:55
Key topics:
Discussed our target audience.</description></item><item><title>2022-11-17</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2022-11-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2022-11-17/</guid><description>Sprint Planning The What - the product owner describes the objective (goal) of the sprint and what backlog items contribute to that goals.</description></item><item><title>2022-11-21</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2022-11-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2022-11-21/</guid><description>Marine Pollution Mostly comes from land sources, 80%.
Two main types: chemicals and trash.
Plastic is particularly problematic as a pollutant because it is very long-lasting.</description></item><item><title>2023-01-10</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2023-01-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2023-01-10/</guid><description>Full backlog divided into sprints.
Some sort of list, like a tick list, of the items with annotations saying &amp;ldquo;done&amp;rdquo;, &amp;ldquo;in progress&amp;rdquo; etc.</description></item><item><title>Activity Diagram</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-activity-diagram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-activity-diagram/</guid><description>Introduction The focus of the activity diagram is the procedural processing aspects.
It uses flow-oriented language concepts and it is based on:</description></item><item><title>alan-turing</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/alan-turing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/alan-turing/</guid><description>Alan Turing Alan Mathison Turing 23rd of June 1912 to 7th of June 1954. Mathematician. Pardoned in 2013. Created the concept of a turing machine.</description></item><item><title>Algorithms and Data Structure</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/algorithms-and-data-structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/algorithms-and-data-structure/</guid><description> Topics Sets and Maps Vectors and Arrays Big O Notation Lists Stacks and Queues Hash Tables Trees Sorting Graphs Minimum Spanning Subtree Dijkstra Floyd-Warshall Inkblot Garbage Collection Problems Extra Resources Visualisation Youtube Course in Java 1 Youtube Course in Java 2 Princeton Course Java MOOC by University of Helsinki Mathematical Algorithms Linear Equations Newton-Raphson Iteration</description></item><item><title>Ant Colony Optimisation and Particle Swarm Optimisation</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/aco-and-pso/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/aco-and-pso/</guid><description>Swarm Intelligence The interaction of many simple parts creating complex behaviour. This means that the net effect of group&amp;rsquo;s collective wisdom is greater than the sum of the individuals.</description></item><item><title>Arrays</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/arrays/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/arrays/</guid><description>Arrays Simplest and most widely used data structure, which maintains the insertion order of elements.
Elements are indexed, meaning the big-O for searching for an index is O(1).</description></item><item><title>Asymptotic Analysis</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/asymptotic-analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/asymptotic-analysis/</guid><description>The asymptotic analysis of an algorithm determines the running time in Big O notation.
To perform the asymptotic analysis:</description></item><item><title>Best-First Search</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/best-first-search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/best-first-search/</guid><description>It is an improvement upon depth-first search.
A heuristic is used to decide which node is explored next:
A heuristic is a rule of thumb or best practice.</description></item><item><title>Big O Notation</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/big-o-notation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/big-o-notation/</guid><description>Big O Notation It describes how the performance of an algorithm scales with the size of the problem.
may be time to execute or amount of memory.</description></item><item><title>Breadth-First Search</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/breadth-first-search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/breadth-first-search/</guid><description>It explores the graph differently from depth-first search.
It considers the neighbouring nodes first:
All the neighbours at the start node are expanded first.</description></item><item><title>Brunel - Computer Science Hub</title><link>https://pietraferreira.github.io/quartz/notes/university/university-hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/university-hub/</guid><description>Brunel - Computer Science Hub Here you can find everything related to my university course.
Useful Links Brightspace</description></item><item><title>Classes, Types and Objects</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/classes-types-objects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/classes-types-objects/</guid><description>Notes from &amp;ldquo;Data Structures and Algorithms in Java by Michael T. Goodrich&amp;rdquo;.
Objects store data and provide methods for accessing and modifying data.</description></item><item><title>CS2001 - Group Project</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/cs2001/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/cs2001/</guid><description>Lecturer: Nadine Aburumman
100% Coursework.
Introduction</description></item><item><title>CS2002 - Software Development</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/cs2002/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/cs2002/</guid><description>Lecturer: Giuseppe Destefanis
50% Coursework (LO1 and LO2) -&amp;gt; Due on the 20th of January.
50% Exam.
Lectures UML - Class Diagram (Week 2 and 3) UML - Sequence Diagram (Week 4 and 5) State Machine Diagrams (Part 1) (Week 8) State Machine Diagrams (Part 2) (Week 9) The Software Process (Week 10) UML - Activity Diagram (Week 11) UML - All-Together (Week 12) References UML @ Classroom - Chapter 3 (Use Case Diagram) (Week 1) Creating a Use Case Diagram</description></item><item><title>CS2002 UML Assignment</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2023-01-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2023-01-09/</guid><description>Use Case Diagram Hassan: Donations and Login. Sammy: Play Game and Register. Pietra: Forum and Check for duplicates. Zeeshan: Access profile and Leaderboard.</description></item><item><title>CS2003 - Exam Revision</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/cs2003-exam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/cs2003-exam/</guid><description>Need to have references.
30 - 40min on questions 1 and 2.
1h on questions 3 and 4.</description></item><item><title>CS2003 - Exam Revision</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/cs2003-exam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/cs2003-exam/</guid><description>Need to have references.
30 - 40min on questions 1 and 2.
1h on questions 3 and 4.</description></item><item><title>CS2003 - Usability Engineering</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/cs2003/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/cs2003/</guid><description>Lecturer: Monica Pereira
Lectures Week 5 - User Models and Conceptual Design Week 6 - User-Centred Design Week 8 - Specifying User Requirements Week 9 - UE Methods and Techniques - Prototyping, Mockups and Wireframes 100% Exam.</description></item><item><title>CS2004 - Algorithms</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/cs2004/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/cs2004/</guid><description> Lecturer: Mahir Arzoky
60% Coursework -&amp;gt; Due on Friday, Week 21.
40% Exam -&amp;gt; Available on Week 23.
Lectures Introduction Foundation Analysis - (Lecture 2) Time Complexity - (Lecture 4) Asymptotic Notation - (Lecture 4) Data Structures and Applications - (Lecture 5) Sorting - (Lecture 6) Graph Traversal - (Lecture 7) Depth-First Search Exhaustive Search Breath-First Search Best-First Search - A* Search Minimum Spanning Tree (MST) - Prim&amp;rsquo;s Dijkstra&amp;rsquo;s Algorithm - (Lecture 8) Search and Fitness - (Lecture 9) Heuristic Search and Simulated Annealing - (Lecture 10) Introduction to Genetic Algorithms - (Lecture 11) Evolutionary Computation - (Lecture 12) Ant Colony Optimisation and Particle Swarm Optimisation - (Lecture 13) References Classes, Types, and Objects Big O Notation Sets and Maps Trees</description></item><item><title>CS2004 - Data Structures</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/data-structures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/data-structures/</guid><description>CS2004 - Data Structures Data structures are the foundation stone of all algorithms.
We can measure how good a particular data structure is by using big-O notation.</description></item><item><title>CS2004 - Exam</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/cs2004-exam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/cs2004-exam/</guid><description>Run time: varies with the input and grows with input size (best case, worst case and average case).</description></item><item><title>CS2004 - Exam</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/cs2004-exam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/cs2004-exam/</guid><description>Run time: varies with the input and grows with input size (best case, worst case and average case).</description></item><item><title>CS2005 - Exam</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/cs2005-exam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/cs2005-exam/</guid><description>4 questions. An answer should be around 500 to 800 words. Question 1 Questions 1 is a short answer about anything.</description></item><item><title>CS2005 - Exam</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/cs2005-exam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/cs2005-exam/</guid><description>4 questions. An answer should be around 500 to 800 words. Question 1 Questions 1 is a short answer about anything.</description></item><item><title>CS2005 - Networks and Operating Systems</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/cs2005/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/cs2005/</guid><description> Lecturer: Anastasia Anagnostou
25% Coursework -&amp;gt; Due on the 06 of December.
75% Exam.
Exam Revision. Lab Notes 1 LIST from #university/cs2005/lab</description></item><item><title>CS3001 - Advanced Topics</title><link>https://pietraferreira.github.io/quartz/notes/university/year3/cs3001/cs3001/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year3/cs3001/cs3001/</guid><description>Lecture Notes 1 2 3 4 5 table without ID file.link as &amp;#34;Link&amp;#34;, file.ctime as &amp;#34;Created Time&amp;#34; from #university/cs3001 WHERE type = &amp;#34;lecture-note&amp;#34; sort file.</description></item><item><title>CS3002 - AI</title><link>https://pietraferreira.github.io/quartz/notes/university/year3/cs3002/cs3002/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year3/cs3002/cs3002/</guid><description>Lecture Notes 1 2 3 4 5 table without ID file.link as &amp;#34;Link&amp;#34;, file.ctime as &amp;#34;Created Time&amp;#34; from #university/cs3002 WHERE type = &amp;#34;lecture-note&amp;#34; sort file.</description></item><item><title>CS3003 - Software Engineering</title><link>https://pietraferreira.github.io/quartz/notes/university/year3/cs3003/cs3003/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year3/cs3003/cs3003/</guid><description>Lecture Notes 1 2 3 4 5 table without ID file.link as &amp;#34;Link&amp;#34;, file.ctime as &amp;#34;Created Time&amp;#34; from #university/cs3003 WHERE type = &amp;#34;lecture-note&amp;#34; sort file.</description></item><item><title>CS3072 - Supervisor</title><link>https://pietraferreira.github.io/quartz/notes/university/year3/cs3072/fyp-supervisor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year3/cs3072/fyp-supervisor/</guid><description>My supervisor is Dr Rumyana Neykova ( rumyana.neykova@brunel.ac.uk) +44 1895 265513
She can be found at Wilfred Brown 210.</description></item><item><title>CS3609 - Cybersecurity</title><link>https://pietraferreira.github.io/quartz/notes/university/year3/cs3609/cs3609/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year3/cs3609/cs3609/</guid><description>Lecture Notes 1 2 3 4 5 table without ID file.link as &amp;#34;Link&amp;#34;, file.ctime as &amp;#34;Created Time&amp;#34; from #university/cs3609 WHERE type = &amp;#34;lecture-note&amp;#34; sort file.</description></item><item><title>Depth-First Search</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/depth-first-search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/depth-first-search/</guid><description>Depth-First Search It allows us to explore nodes and edges of a graph.
The traversal will go as far as possible down a path until a dead end is reached.</description></item><item><title>Dijkstra Algorithm</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/dijkstra-algorithm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/dijkstra-algorithm/</guid><description>It is used to determine the shortest path from one node in the graph to every other node within the same graph, provided they can be reached from the source node.</description></item><item><title>Evolutionary Programming</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/evolutionary-programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/evolutionary-programming/</guid><description>Similar to Genetic Algorithms.
The emphasis here is on mutation and there is no crossover.
Every individual mutates, doubling the population.</description></item><item><title>Exam Revision Plan</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/year2-examplan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/year2-examplan/</guid><description>Exam timetable: CS2003 Usability Engineering (04/05) Software Development and Management (10/05) Moodle environment. Lectures.</description></item><item><title>Exhaustive Search</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/exhaustive-search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/exhaustive-search/</guid><description>It systematically evaluates every possible path in a graph. It is guaranteed to find what we are looking for, however it is unsuitable for most real world problems.</description></item><item><title>Forum DevLog</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/forum-devlog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/forum-devlog/</guid><description>Forum DevLog Achievements Initialised the project by creating the HTML and CSS pages.
Added support to smaller screens.</description></item><item><title>Forum DevLog 23/02</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2023-02-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2023-02-23/</guid><description>Forum DevLog Today I&amp;rsquo;m working on continuing to develop the comment and reply system within the forum.
Currently, the admin has to add comments and replies manually using the dashboard.</description></item><item><title>Foundation of Algorithm Analysis</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/alg-foundation-analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/alg-foundation-analysis/</guid><description>Running time. Pseudo-code. Counting primitive operations. Running Time Varies with the input and typically grows with the input size.</description></item><item><title>Graphs</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/graphs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/graphs/</guid><description>Graphs A graph consists of:
A set of fixed objects, nodes. A set of edges, which may have arrows and have values attached.</description></item><item><title>Heuristic Seach, Hill Climbing and Simulated Annealing</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/hc-and-sa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/hc-and-sa/</guid><description>Heuristic Search Some difficult problems (NP-hard) cannot be solved in a straightforward manner.
We need to develop approximation algorithms to solve these problems.</description></item><item><title>Introduction</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/group-project-intro-gp20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/group-project-intro-gp20/</guid><description>The theme of the project will be based on the UN Sustainable Development Goals.
It will be a full-stack web application with a server backend, pulling and pushing data from and to a data source.</description></item><item><title>Introduction to Algorithms</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/alg-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/alg-intro/</guid><description>An algorithm is a set of steps for solving a problem. It is a well-defined computational procedure that takes some value(s) as input and produces some value(s) as output.</description></item><item><title>Introduction to Genetic Algorithms</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/intro-gen-algorithms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/intro-gen-algorithms/</guid><description>Genetic Algorithms belong to a family of techniques that are inspired from evolution theory.
Each gene is a binary digit.</description></item><item><title>Linked List</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/linked-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/linked-list/</guid><description>Linked List It maintains the insertion order of elements, however they are not indexed. When searching, we start with the head and work our way through.</description></item><item><title>Modules</title><link>https://pietraferreira.github.io/quartz/notes/university/year-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year-2/</guid><description>Modules A list of all the different modules I am taking during my second year.
Year 2 is 1/3 of the final grade!</description></item><item><title>Queue</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/queue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/queue/</guid><description>Queue First in, last out (FIFO), double linked list works well. Think of a standard queue, for example at the bank.</description></item><item><title>REST API</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/rest-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/rest-api/</guid><description>REST API APIs provide a standardised way for two applications to send data back and forth.
REST is a set of guidelines that software can use to communicate over the internet in order to make integrations simple and scalable.</description></item><item><title>Search and Fitness</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/search-and-fitness/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/search-and-fitness/</guid><description>Definition of a Search Problem For some problems we need to search for a solution from a (usually) very large number of possibilities, search problems.</description></item><item><title>Selection Sort</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/selection-sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/selection-sort/</guid><description>Selection Sort It sorts an array by repeatedly finding the minimum element from the unsorted part of the array and puts it at the beginning.</description></item><item><title>Software Development Diagrams - Assigment</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2022-11-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2022-11-28/</guid><description>Software Development Diagrams - Assignment Name: Register User Short Description: &amp;hellip; Precondition:
User doesn&amp;rsquo;t have an account User has an email address available Postcondition: User has an account Error situations: Misspelt email.</description></item><item><title>Sorting</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/sorting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/sorting/</guid><description>Sorting The sorting problem is a mapping from $x$ to $y$, where:
$x$ and $y$ are both n length real vectors (lists and/or arrays).</description></item><item><title>Specifying User Requirements</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/specifying-user-requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/specifying-user-requirements/</guid><description>Selecting an appropriate UCD (User Centred Design) method is vital.
Human-Centred Design Process: ISO 13407 Its goal is to achieve usable systems.</description></item><item><title>State Machine Diagrams - Part 1</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/state-machine-diagrams-part1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/state-machine-diagrams-part1/</guid><description>Introduction Every object takes a finite number of different stages during its life. State machine diagrams are used as follows:</description></item><item><title>State Machine Diagrams - Part 2</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/state-machine-diagrams-part2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/state-machine-diagrams-part2/</guid><description>Recap: A Simple State Composite State Also known as complex state or nested state.
It contains other states, substates.</description></item><item><title>The Software Process</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/the-software-process/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/the-software-process/</guid><description>The software process is a structured set of activities required to develop a software system.
Three main models:
Waterfall model.</description></item><item><title>Time Complexity</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/time-complexity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/time-complexity/</guid><description>Sorting It is one of the most common tasks in data analysis.
Examples:
Print out a collection of employees sorted by salary.</description></item><item><title>turing-machines</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/turing-machines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/turing-machines/</guid><description>Turing Machines Turning machine manipulate symbols on a strip of tape according to a table of rules and it is capable of implementing any computer algorithm.</description></item><item><title>UE Methods and Techniques - Prototyping, Mockups and Wireframes</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/ue-methods-and-techniques/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/ue-methods-and-techniques/</guid><description>The Sketch in Interaction Design Two requirements approaches when prototyping an interactive system:
Using a formal specification. Developing the specification out of the prototype.</description></item><item><title>UML - All-Together</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-all-together/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-all-together/</guid><description> Notation Elements</description></item><item><title>UML - Class Diagram</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-class-diagram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-class-diagram/</guid><description>Objects Individuals of a system:
Object Diagram The objects of a system and their relationships, snapshot of objects at a specific moment in time:</description></item><item><title>UML - Sequence Diagram</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-sequence-diagram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-sequence-diagram/</guid><description>Inter-object behaviour: interactions between objects.
Interaction: how data is exchanged between interaction partners.
Interaction partners: - Human (lectures, administrator, &amp;hellip;) - Non-human (sever, printer, executable software, &amp;hellip;)</description></item><item><title>UML @ Classroom - Chapter 3 (Creating a Use Case Diagram)</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/creating-a-use-case-diagram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/creating-a-use-case-diagram/</guid><description>This is continuation of my notes on Use Case Diagrams from the book UML @ Classroom.
The first step is to identify actors and use cases and then place them in relationships with one another.</description></item><item><title>UML @ Classroom - Chapter 3 (Use Case Diagram)</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-classroom-chap3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-classroom-chap3/</guid><description>Use Case Diagram Allows to describe the possible usage scenarios (use cases) that a system is developed for. Doesn&amp;rsquo;t address realisation details, for example data structures or algorithms.</description></item><item><title>UML Class Diagram - Assignment</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2022-12-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2022-12-14/</guid><description>Forum User -&amp;gt; Creates -&amp;gt; Forum
1 2 3 4 topicTitle : String ------------------- getTopic() : String getPost() (post : Post) : Post Post(s) Forum -&amp;gt; Has -&amp;gt; Post(s)</description></item><item><title>User Models and Conceptual Design</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/user-models-and-conceptual-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/user-models-and-conceptual-design/</guid><description>Making Sense of the World Transparent objects expose their functions, for example a bicycle.
Opaque objects however, hide their functions.</description></item><item><title>User-Centred Design</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/user-centred-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/user-centred-design/</guid><description>It is important to ensure that we meet users needs, this is what user-centered design is all about.
The problem with traditional development is that:</description></item></channel></rss>