<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Morioh on</title><link>https://pietraferreira.github.io/quartz/</link><description>Recent content in Morioh on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pietraferreira.github.io/quartz/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://pietraferreira.github.io/quartz/assets/tiger.pdf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/assets/tiger.pdf/</guid><description/></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/daily/2022-12-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/daily/2022-12-28/</guid><description>December 28, 2022 Cleaned up and upgraded my nvim.
Learning how to properly set up a virtual environment: here.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/how-to-add-instructions-to-as-slides/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/how-to-add-instructions-to-as-slides/</guid><description>How to add instructions to the GNU Assembler Instruction Example Using cv.starti as an example:
1 cv.starti Ln, uimmL Ln: 0 for inner loop, 1 for outer loop.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-02-01-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-02-01-report/</guid><description>Hi all,
I am sending a report regarding the third lot of 10h worked on the RISC-V
Custom Relocation Handling prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-02-10-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-02-10-report/</guid><description>Hi all,
I am sending a report regarding the fourth lot of 10h worked on the RISC-V
Custom Relocation Handling prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-02-16-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-02-16-report/</guid><description>Hi all,
I am sending a report regarding the fifth lot of 10h worked on the RISC-V Custom Relocation Handling prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-02-25-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-02-25-report/</guid><description>Hi all,
I am sending a report regarding the sixth lot of 10h worked on the RISC-V
Custom Relocation Handling prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-03-03-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-03-03-report/</guid><description>Hi all,
I am sending a report regarding the seventh lot of 10h worked on the RISC-V Custom Relocation Handling prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-03-16-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-03-16-report/</guid><description>Hi all,
I am sending a report regarding the 8th lot of 10h worked on the RISC-V Custom Relocation Handling prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-03-17-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-03-17-report/</guid><description>Hi all,
I am sending a report regarding the 9th lot of 10h worked on the RISC-V Custom Relocation Handling prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-03-24-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-03-24-report/</guid><description>Hi all,
I am sending a report regarding the 10th lot of 10h worked on the RISC-V Custom Relocation Handling prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-03-30-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-03-30-report/</guid><description>Hi all,
I am sending a report regarding the 11th lot of 10h worked on the RISC-V Custom Relocation Handling prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-04-01-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-04-01-report/</guid><description>Hi all,
I am sending a report regarding the 11th lot of 10h worked on the RISC-V
Custom Relocation Handling prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-04-09-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-04-09-report/</guid><description>Hi all,
I am sending a report regarding the 12th lot of 10h worked on the RISC-V
Custom Relocation Handling prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-04-15-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-04-15-report/</guid><description>Hi all,
I am sending a report regarding the 13th lot of 10h worked on the RISC-V Custom Relocation Handling prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-04-22-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-04-22-report/</guid><description>Hi all,
I am sending a report regarding the 14th lot of 10h worked on the RISC-V
Custom Relocation Handling prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-04-28-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-04-28-report/</guid><description>Hi all,
I am sending a report regarding the 15th lot of 10h worked on the RISC-V Custom Relocation Handling prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-05-07-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-05-07-report/</guid><description>Hi all,
I am sending a report regarding the 16th lot of 10h worked on the RISC-V Custom Relocation prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-05-14-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-05-14-report/</guid><description>Hi all,
I am sending a report regarding the 17th lot of 10h worked on the RISC-V Custom Relocation prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-05-18-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-05-18-report/</guid><description>Hi all,
I am sending a report regarding the 18th lot of 10h worked on the RISC-V Custom Relocation prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-05-27-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-05-27-report/</guid><description>Hi all,
I am sending a report regarding the 19th lot of 10h worked on the RISC-V Custom Relocation prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-06-02-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-06-02-report/</guid><description>Hi all,
I am sending a report regarding the 20th lot of 10h worked on the RISC-V Custom Relocation prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-06-11-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-06-11-report/</guid><description>Hi all,
I am sending a report regarding the 21th lot of 10h worked on the RISC-V Custom Relocation prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-06-16-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-06-16-report/</guid><description>Hi all,
I am sending a report regarding the 22nd lot of 10h worked on the RISC-V Custom Relocation prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-06-25-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-06-25-report/</guid><description>Hi all,
I am sending a report regarding the 23rd lot of 10h worked on the RISC-V Custom Relocation prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-07-02-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2022-07-02-report/</guid><description>Hi all,
I am sending a report regarding the 24th lot of 10h worked on the RISC-V Custom Relocation prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2023-06-10-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/reports/2023-06-10-report/</guid><description>Hi all,
I am sending a report regarding the work done on the RISC-V Custom Relocation prototype project this week.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/template-reloc-prototype/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/template-reloc-prototype/</guid><description>tags:
work work/report work/relocation-prototype/relocation-prototype project: relocation-prototype Hi all,
I am sending a report regarding the &amp;lt;&amp;gt; lot of 10h worked on the RISC-V Custom Relocation prototype.</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/testing-dashboard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/testing-dashboard/</guid><description>A list of all the different modules I am taking during my third year.
Year 3 is 2/3 of the final grade!</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/annotation-computer-networks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/annotation-computer-networks/</guid><description>%%
1 {&amp;#34;created&amp;#34;:&amp;#34;2023-05-08T10:15:34.739Z&amp;#34;,&amp;#34;updated&amp;#34;:&amp;#34;2023-05-08T10:15:34.739Z&amp;#34;,&amp;#34;document&amp;#34;:{&amp;#34;title&amp;#34;:&amp;#34;Computer Networking: A Top-Down Approach, 7th Edition&amp;#34;,&amp;#34;link&amp;#34;:[{&amp;#34;href&amp;#34;:&amp;#34;urn:x-pdf:8ab23c2355d202449f37ee1756d29912&amp;#34;},{&amp;#34;href&amp;#34;:&amp;#34;vault:/notes/documents/computer-networks.pdf&amp;#34;}],&amp;#34;documentFingerprint&amp;#34;:&amp;#34;8ab23c2355d202449f37ee1756d29912&amp;#34;},&amp;#34;uri&amp;#34;:&amp;#34;vault:/notes/documents/computer-networks.pdf&amp;#34;,&amp;#34;target&amp;#34;:[{&amp;#34;source&amp;#34;:&amp;#34;vault:/notes/documents/computer-networks.pdf&amp;#34;,&amp;#34;selector&amp;#34;:[{&amp;#34;type&amp;#34;:&amp;#34;TextPositionSelector&amp;#34;,&amp;#34;start&amp;#34;:50897,&amp;#34;end&amp;#34;:51227},{&amp;#34;type&amp;#34;:&amp;#34;TextQuoteSelector&amp;#34;,&amp;#34;exact&amp;#34;:&amp;#34;Internet ­standards are developed by the Internet Engineering Task Force(IETF) [IETF 2016].</description></item><item><title/><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/annotation-os/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/annotation-os/</guid><description>%%
1 {&amp;#34;created&amp;#34;:&amp;#34;2023-05-11T16:47:24.682Z&amp;#34;,&amp;#34;updated&amp;#34;:&amp;#34;2023-05-11T16:47:24.682Z&amp;#34;,&amp;#34;document&amp;#34;:{&amp;#34;title&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;link&amp;#34;:[{&amp;#34;href&amp;#34;:&amp;#34;urn:x-pdf:2d9cb7ef5a7a8c9070382769d4774a00&amp;#34;},{&amp;#34;href&amp;#34;:&amp;#34;vault:/notes/documents/os.pdf&amp;#34;}],&amp;#34;documentFingerprint&amp;#34;:&amp;#34;2d9cb7ef5a7a8c9070382769d4774a00&amp;#34;},&amp;#34;uri&amp;#34;:&amp;#34;vault:/notes/documents/os.pdf&amp;#34;,&amp;#34;target&amp;#34;:[{&amp;#34;source&amp;#34;:&amp;#34;vault:/notes/documents/os.pdf&amp;#34;,&amp;#34;selector&amp;#34;:[{&amp;#34;type&amp;#34;:&amp;#34;TextPositionSelector&amp;#34;,&amp;#34;start&amp;#34;:171910,&amp;#34;end&amp;#34;:172096},{&amp;#34;type&amp;#34;:&amp;#34;TextQuoteSelector&amp;#34;,&amp;#34;exact&amp;#34;:&amp;#34;One viewfocuses on the services that the system provides; another, on the interface thatit makes available to users and programmers; a third, on its components andtheir interconnections.</description></item><item><title>01/12/20 - Code Size Meeting</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2020-12-01-code-size-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2020-12-01-code-size-meeting/</guid><description>01/12/20 - Code Size Meeting ZFinx Notes Jiawei had some issues with some arithmetic instructions (fsqrt, fmin, fmax), an error about &amp;lsquo;unsatisfied constraints&amp;rsquo;</description></item><item><title>2-3 Trees</title><link>https://pietraferreira.github.io/quartz/notes/general/2-3-trees/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/2-3-trees/</guid><description>2-3 Trees A tree, where every internal node has either:
two children and one data element (2-node); or three children and two data elements (3-node).</description></item><item><title>20/11/20 - Code Size Meeting</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2020-11-20-code-size-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2020-11-20-code-size-meeting/</guid><description>20/11/20 - Code Size Meeting (By &amp;ldquo;he&amp;rdquo; I think I mean Jiawei)
He needs to add tests to the GAS testsuite for RISC-V, testing boundary conditions and pattern match the binaries.</description></item><item><title>2020-09-28</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2020-09-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2020-09-28/</guid><description>2020-09-28 a5 is t1 and a4 is t0
it is optimising out add and move
adjust the address to the same mode, and move the des from one the regis, and then (instead of setupi using starti) push no rvc, then copy source to reg0 then back to reg1 then emit the label</description></item><item><title>2020-10-08</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2020-10-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2020-10-08/</guid><description>2020-10-08 need mcorev-loops flag optmisation needs to be on for it to work nothing is on by default gen functions -&amp;gt; gen starti etc you can write gen_starti etc, they can be useful</description></item><item><title>2020-10-28</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2020-10-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2020-10-28/</guid><description>gcc/gcc/config/arc:2201
It has a gen_mac_600 which is the closest to gen_mac I could find
In gcc/gcc/config/mips:2563 it has Floating point multiply accumulate instructions but they look very different.</description></item><item><title>2020-11-19</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2020-11-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2020-11-19/</guid><description>p.extbz rD, rs1
1 2 3 4 5 6 7 8 9 (define_insn &amp;#34;cv_extbz&amp;#34; [(set (match_operand:SI 0 &amp;#34;register_operand&amp;#34; &amp;#34;=r&amp;#34;) (zero_extend:SI (match_operand:HI 1 &amp;#34;register_operand&amp;#34; &amp;#34;r&amp;#34;)) )] &amp;#34;TARGET_COREV_ALU&amp;#34; &amp;#34;cv.</description></item><item><title>2021-04-06 - Tiger Jenkins Guide</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/tiger/2021-04-06-tiger-jenkins-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/tiger/2021-04-06-tiger-jenkins-guide/</guid><description>2021-04-06 - Tiger Jenkins Guide go to main wiki
jenkins
tiger-user-branches
go to build with parameters
choose my branch</description></item><item><title>2022 11 13</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/2022-11-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/2022-11-13/</guid><description>O5Client O5Server (run O5Server) (run O5Client) SEND &amp;ldquo;O5Server is ready&amp;rdquo; RECEIVE &amp;ldquo;O5Server is ready&amp;rdquo; (accept O5Client connection) WHILE NOT TERMINATED WHILE NOT TERMINATED SEND &amp;ldquo;Welcome to O5AppShop [&amp;hellip;] Choose and option: 1.</description></item><item><title>2022 11 20</title><link>https://pietraferreira.github.io/quartz/notes/general/tasks/2022-11-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/tasks/2022-11-20/</guid><description>Talk about approving PRs, don&amp;rsquo;t ever approve without discussing with the group. ✅ 2023-05-08
Always have one person to review it?</description></item><item><title>2022-05-03 - Relocation Prototype Meeting</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/meetings/2022-05-03-relocation-prototype-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/meetings/2022-05-03-relocation-prototype-meeting/</guid><description>Monthly (or quaterly?) meeting - Relocation Prototype 1 2 3 ../../../binutils-gdb/bfd/elfxx-riscv.c:1046:1: warning: no previous prototype for ‘riscv_reloc_name_lookup_custom’ [-Wmissing-prototypes] riscv_reloc_name_lookup_custom (bfd *abfd ATTRIBUTE_UNUSED, const char *r_name) ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Have secondary howto table with RELOCID</description></item><item><title>2022-06-02</title><link>https://pietraferreira.github.io/quartz/notes/daily/2022-06-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/daily/2022-06-02/</guid><description>Assuming we already have RELOCID in place:
There is a bool pretend_im_corev in gas/config/tc-riscv.c which sets the relocation as CORE-V. Then it gets checked and we set an ID for CORE-V (100):</description></item><item><title>2022-06-17 - Jeremy Relocation Notes</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2022-06-17-jeremy-relocation-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2022-06-17-jeremy-relocation-notes/</guid><description>end of linker -&amp;gt; introduce the issue of being no mechanism for vendor specific relocation -&amp;gt; discuss issue of relocations, we can do vendor specific but not vendor specific relocations.</description></item><item><title>2022-06-23</title><link>https://pietraferreira.github.io/quartz/notes/daily/2022-06-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/daily/2022-06-23/</guid><description>I think I am getting this error:
1 2 ../bfd/.libs/libbfd.a(elf32-riscv.o): In function `perform_relocation&amp;#39;: /home/pietraferreira/corev/build/binutils-gdb/bfd/elfnn-riscv.c:1653: undefined reference to `riscv_elf_custom_relocid&amp;#39; Because riscv_elf_custom_relocid is being called from inside perform_relocation, thus it doesn&amp;rsquo;t exist in that space.</description></item><item><title>2022-06-27</title><link>https://pietraferreira.github.io/quartz/notes/hacking/2022-06-27-benefits-of-vms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/2022-06-27-benefits-of-vms/</guid><description>2022-06-27 React Game of Life ( Here) npm init react-app react-gameoflife
HackTheBox Setting Up Can track commands on the terminal by doing: 1 2 3 script &amp;lt;name&amp;gt;.</description></item><item><title>2022-06-28</title><link>https://pietraferreira.github.io/quartz/notes/hacking/pentesting-notes-commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/pentesting-notes-commands/</guid><description>Resources HackTricks Tools SMB Server Message Blocks (Port 445) (aka Common Internet File System).
To enumerate:
1 2 3 4 smbclient -N -L \\\\{TARGET_IP}\\ -N: no password -L: look at what services are available To access:</description></item><item><title>2022-06-29</title><link>https://pietraferreira.github.io/quartz/notes/hacking/web-app-writeup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/web-app-writeup/</guid><description>Web App Guide Source here.
Easy way to record when I take my creatine. When a link is tapped on the home screen, it records the visit and this preserves a record of when creatine was taken.</description></item><item><title>2022-07-04</title><link>https://pietraferreira.github.io/quartz/notes/daily/2022-07-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/daily/2022-07-04/</guid><description>CORE-V We have a static relocation in bfd/elfnn-riscv.c (perform_relocation) which switches on the instruction type and encodes the instruction.
The way we were doing was we would have a R_RISCV_RELOCID as a case which would trigger a function, riscv_elf_custom_relocid() (the one similar to add/sub).</description></item><item><title>2022-07-05</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/2022-07-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/2022-07-05/</guid><description>BFD Front End A BFD has type bfd. Using BFD consists of making references through the BFD and to data in the BFD.</description></item><item><title>2022-07-07</title><link>https://pietraferreira.github.io/quartz/notes/daily/2022-07-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/daily/2022-07-07/</guid><description>Flag to ignore main: 1 --defsym=main=0x100 To ignore _start: 1 -nostartfiles RelocID Pass *howto: 1 {type = 224, size = 2, bitsize = 32, rightshift = 1, bitpos = 0, complain_on_overflow = complain_overflow_unsigned, negate = 0, pc_relative = 1, partial_inplace = 0, pcrel_offset = 1, src_mask = 0, dst_mask = 4293918720, special_function = 0x5555555cb8e0 &amp;lt;bfd_elf_generic_reloc&amp;gt;, name = 0x5555556c7506 &amp;#34;R_RISCV_CVPCREL_UI12&amp;#34;} *rel: 1 {r_offset = 2, r_info = 1504, r_addend = 0} value: 3145728 We first do CVPCREL with the *howto:</description></item><item><title>2022-07-15</title><link>https://pietraferreira.github.io/quartz/notes/hacking/daily-bugle-writeup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/daily-bugle-writeup/</guid><description>Daily Bugle Writeup (TryHackMe) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 nmap -sV -sC 10.</description></item><item><title>2022-07-25</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-07-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-07-25/</guid><description>flw for example is only supported by 32-bits. Therefore, there is a fail march test which uses rv32i. rv64 doesn&amp;rsquo;t support zcf, so should I still do the same thing?</description></item><item><title>2022-07-26</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-07-26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-07-26/</guid><description>c.flwsp -&amp;gt; zero-extended 6-bit immediate, scaled by 4 (4^6=4096) and the boundary is half of that minus 1, thus 2047.</description></item><item><title>2022-08-02-cobra-report</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-02-cobra-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-02-cobra-report/</guid><description>Assembler Support for the CORE-V Zc* Extension - Report 2nd of August 2022
The Zc* extensions are being carefully tested and the testsuite for Zc* has been expanded.</description></item><item><title>2022-08-03</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/everest/2022-08-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/everest/2022-08-03/</guid><description>Originally with WD but now with the new company (secret).
Code size improvements, get close to GCC - LLVM Overlay - can have code as overlay, goes in slow memory and you can dynamically load it to RAM.</description></item><item><title>2022-08-04</title><link>https://pietraferreira.github.io/quartz/notes/general/tasks/2022-08-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/tasks/2022-08-04/</guid><description>Message Arjan to let him know the assembler is complete and where to find it. Also that we are now working on the linker and documentation.</description></item><item><title>2022-08-08-cobra-report</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-08-cobra-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-08-cobra-report/</guid><description>Assembler Support for the CORE-V Zc* Extension - Report Completed Last Week Verified Zc* with the GNU assembler (gas).</description></item><item><title>2022-08-16</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-16/</guid><description>GCC - https://github.com/pietraferreira/corev-gcc/tree/cobra-stable Binutils-GDB - https://github.com/pietraferreira/corev-binutils-gdb/tree/cobra-stable Newlib - https://sourceware.org/git/newlib-cygwin.git files built with this compiler will misinform the version that is implemented</description></item><item><title>2022-08-17</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-17/</guid><description>Cobra Tasks Fix Issues: Jump table located incorrectly Relaxation (Charlie has submitted a PR) (GCC) Incorrect version Then we can test the linker.</description></item><item><title>2022-08-18</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2022-08-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2022-08-18/</guid><description>Hello Robin,
Thanks for reporting this issue.
We&amp;rsquo;ve taken a look at it and it seems to be an issue with the latest development Newlib that doesn&amp;rsquo;t show up in GCC testing.</description></item><item><title>2022-08-24</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-24/</guid><description>pull request from your repo to the official core-v-binutils-gdb repo to merge all the assembler/linker work (Pietra?) (REBASE) ✅ 2023-05-08 pull request from your repo to the official core-v-gcc repo to merge all the gcc work (Pietra?</description></item><item><title>2022-08-25</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/everest/2022-08-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/everest/2022-08-25/</guid><description>1 ../../../../../install/bin/riscv32-unknown-elf-gdb eh1.elf -ex &amp;#39;source ../../../../../install/share/gdb/python/gdb/ovlymgr.py&amp;#39; -ex &amp;#39;tar rem 192.168.0.134:3333&amp;#39; -ex load -ex &amp;#39;b main.c:82&amp;#39; -ex When I run:</description></item><item><title>2022-09-30</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/2022-09-30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/2022-09-30/</guid><description>To mount remote filesystem:
CiscoConnect using academic\2041368 as the login. Then going to Finder -&amp;gt; Go -&amp;gt; Connect to Server&amp;hellip; Connect to v-csfs01.</description></item><item><title>2022-10-04</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2022-10-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2022-10-04/</guid><description>2022-10-04 Students can:
Register for studies (matriculation) -&amp;gt; involves enrolling Enroll Withdraw Student receives certificate from student office.</description></item><item><title>2022-10-06</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/2022-10-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/2022-10-06/</guid><description>Trying to better understand the howto table and how the linker retrieves/stores information as I can&amp;rsquo;t seem to retrieve the value for the relocation, even though it seems to be retrieving the relocation itself.</description></item><item><title>2022-10-11</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/2022-10-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/2022-10-11/</guid><description>We first get:
1 2 3 4 5 6 7 8 9 10 11 12 13 value = 65628 *rel -&amp;gt; r_offset = 2, r_info = 1760, r_addend = 0; howto: $21 = {type = 224, size = 2, bitsize = 32, rightshift = 1, bitpos = 0, complain_on_overflow = complain_overflow_unsigned, negate = 0, pc_relative = 1, partial_inplace = 0, pcrel_offset = 1, src_mask = 0, dst_mask = 4293918720, special_function = 0x5555555eca6f &amp;lt;bfd_elf_generic_reloc&amp;gt;, name = 0x55555572a20e &amp;#34;R_RISCV_CVPCREL_UI12&amp;#34;} value after getting the addend = 6 type = 224 work/relocation-prototype programming-languages: created: 2022-10-11 We first get:</description></item><item><title>2022-10-16 - CS2005 Lab 3 (HTTP)</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/2022-10-16-lab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/2022-10-16-lab/</guid><description>The version of HTTP that the client and the server are running. Is it HTTP version 1.0 or 1.1? Version 1.</description></item><item><title>2022-11-10</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2022-11-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2022-11-10/</guid><description>Quick Meeting with Sammy
13:18 to 13:45
Registration is fully working with a database connected to it, we just don&amp;rsquo;t have the other pages.</description></item><item><title>2022-11-16</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2022-11-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2022-11-16/</guid><description>Meeting with Sammy (and Zeeshan!)
Attendants:
Pietra Zeeshan Sammy 14:06 - 16:55
Key topics:
Discussed our target audience.</description></item><item><title>2022-11-17</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2022-11-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2022-11-17/</guid><description>Sprint Planning The What - the product owner describes the objective (goal) of the sprint and what backlog items contribute to that goals.</description></item><item><title>2022-11-21</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2022-11-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2022-11-21/</guid><description>Marine Pollution Mostly comes from land sources, 80%.
Two main types: chemicals and trash.
Plastic is particularly problematic as a pollutant because it is very long-lasting.</description></item><item><title>2023-01-10</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2023-01-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2023-01-10/</guid><description>Full backlog divided into sprints.
Some sort of list, like a tick list, of the items with annotations saying &amp;ldquo;done&amp;rdquo;, &amp;ldquo;in progress&amp;rdquo; etc.</description></item><item><title>Activity Diagram</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-activity-diagram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-activity-diagram/</guid><description>Introduction The focus of the activity diagram is the procedural processing aspects.
It uses flow-oriented language concepts and it is based on:</description></item><item><title>Admonition Cheatsheet</title><link>https://pietraferreira.github.io/quartz/notes/general/admonition-cheatsheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/admonition-cheatsheet/</guid><description>Admonition Cheatsheet 1 2 3 4 5 6 ad-&amp;lt;type&amp;gt; # Admonition type. title: # Admonition title. collapse: # Create a collapsible admonition.</description></item><item><title>alan-turing</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/alan-turing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/alan-turing/</guid><description>Alan Turing Alan Mathison Turing 23rd of June 1912 to 7th of June 1954. Mathematician. Pardoned in 2013. Created the concept of a turing machine.</description></item><item><title>Algorithms and Data Structure</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/algorithms-and-data-structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/algorithms-and-data-structure/</guid><description> Topics Sets and Maps Vectors and Arrays Big O Notation Lists Stacks and Queues Hash Tables Trees Sorting Graphs Minimum Spanning Subtree Dijkstra Floyd-Warshall Inkblot Garbage Collection Problems Extra Resources Visualisation Youtube Course in Java 1 Youtube Course in Java 2 Princeton Course Java MOOC by University of Helsinki Mathematical Algorithms Linear Equations Newton-Raphson Iteration</description></item><item><title>Ambiguous Grammars</title><link>https://pietraferreira.github.io/quartz/notes/general/ambiguous-grammars/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/ambiguous-grammars/</guid><description>Ambiguous Grammars An ambiguous grammar permits more than one parse tree for some sentences. For example, parsing xxx with the following grammar: S $\rightarrow$ AA</description></item><item><title>Ant Colony Optimisation and Particle Swarm Optimisation</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/aco-and-pso/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/aco-and-pso/</guid><description>Swarm Intelligence The interaction of many simple parts creating complex behaviour. This means that the net effect of group&amp;rsquo;s collective wisdom is greater than the sum of the individuals.</description></item><item><title>Arrays</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/arrays/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/arrays/</guid><description>Arrays Simplest and most widely used data structure, which maintains the insertion order of elements.
Elements are indexed, meaning the big-O for searching for an index is O(1).</description></item><item><title>Assembler Support for the RISC-V Zc* Extension - Report</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-22-cobra-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/2022-08-22-cobra-report/</guid><description>Assembler Support for the RISC-V Zc* Extension - Report We&amp;rsquo;ve provided an interim release of the pre-built binaries and any support necessary to use them.</description></item><item><title>Assembly Test Example - CORE-V</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/assembly-test-example-corev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/assembly-test-example-corev/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 * { dg-do run } */ #include &amp;lt;stdlib.</description></item><item><title>Asymptotic Analysis</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/asymptotic-analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/asymptotic-analysis/</guid><description>The asymptotic analysis of an algorithm determines the running time in Big O notation.
To perform the asymptotic analysis:</description></item><item><title>B-Trees</title><link>https://pietraferreira.github.io/quartz/notes/general/b-trees/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/b-trees/</guid><description>B-Trees A B-tree of order m has the following properties:
every node has at most m children. every non-leaf node (except root) has at least m/2 children.</description></item><item><title>Best-First Search</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/best-first-search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/best-first-search/</guid><description>It is an improvement upon depth-first search.
A heuristic is used to decide which node is explored next:
A heuristic is a rule of thumb or best practice.</description></item><item><title>Big O Notation</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/big-o-notation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/big-o-notation/</guid><description>Big O Notation It describes how the performance of an algorithm scales with the size of the problem.
may be time to execute or amount of memory.</description></item><item><title>Binary Exploitation - By HTB</title><link>https://pietraferreira.github.io/quartz/notes/hacking/binary-exploitation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/binary-exploitation/</guid><description>00 Check file vulnerabilities: 1 checksec --file &amp;lt;filename&amp;gt; Gets rid of Stack, NX and PIE protection (-m32 changes to 32bits): 1 gcc &amp;lt;filename&amp;gt;.</description></item><item><title>Binary Heap</title><link>https://pietraferreira.github.io/quartz/notes/general/binary-heap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/binary-heap/</guid><description>Binary Heap A binary heap is a form of binary tree, with two additional properties:
It is a complete binary tree, meaning that all levels of the tree (except possibly the last one) are full.</description></item><item><title>Binary Trees</title><link>https://pietraferreira.github.io/quartz/notes/general/binary-trees/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/binary-trees/</guid><description>Binary Trees A binary tree is a set of nodes linked into a simple structure. Every node has at most two children.</description></item><item><title>Blockchain</title><link>https://pietraferreira.github.io/quartz/notes/general/blockchain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/blockchain/</guid><description>Blockchain Video source. More https://github.com/smartcontractkit/full-blockchain-solidity-course-js#welcome-to-the-course. What is a Blockchain? It is a distributed database or ledger that is shared among the nodes of a computer network.</description></item><item><title>Breadth-First Search</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/breadth-first-search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/breadth-first-search/</guid><description>It explores the graph differently from depth-first search.
It considers the neighbouring nodes first:
All the neighbours at the start node are expanded first.</description></item><item><title>Brunel - Computer Science Hub</title><link>https://pietraferreira.github.io/quartz/notes/university/university-hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/university-hub/</guid><description>Brunel - Computer Science Hub Here you can find everything related to my university course.
Useful Links Brightspace</description></item><item><title>Bubble Sort</title><link>https://pietraferreira.github.io/quartz/notes/general/bubble-sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/bubble-sort/</guid><description>Bubble Sort Bubble sort is $O(n_2)$ meaning it is:
efficient if n is small. efficient if the array is mostly sorted.</description></item><item><title>Bucket Sort</title><link>https://pietraferreira.github.io/quartz/notes/general/bucket-sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/bucket-sort/</guid><description>Bucket Sort Generally you can&amp;rsquo;t do better than $O_{n\ log\ n}$ with binary comparison.
However, can do better if the structure of the data is known, which allows to sort it into buckets in a single operation.</description></item><item><title>Building Cobra</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/building-cobra/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/building-cobra/</guid><description>How to build I have a cobra folder which contains:
1 2 ❯ ls binutils build install logs toolchain Here binutils is my corev-binutils-gdb fork, I just renamed it so the build script can find it.</description></item><item><title>C</title><link>https://pietraferreira.github.io/quartz/notes/general/c-language/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/c-language/</guid><description>Declaration vs Definition A definition associates a name with an implementation of that name, either data or code:
A definition of a variable induces the compiler to reserve some space for that variable and possibly fill that space with a particular value.</description></item><item><title>Chomsky Grammars</title><link>https://pietraferreira.github.io/quartz/notes/general/chomsky-grammars/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/chomsky-grammars/</guid><description>Chomsky Grammars Type 0 (free) grammars:
Productions of the form u $\rightarrow$ v, where: u, v are arbitrary string in V.</description></item><item><title>Classes, Types and Objects</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/classes-types-objects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/classes-types-objects/</guid><description>Notes from &amp;ldquo;Data Structures and Algorithms in Java by Michael T. Goodrich&amp;rdquo;.
Objects store data and provide methods for accessing and modifying data.</description></item><item><title>Cobra</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/cobra-hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/cobra-hub/</guid><description>Cheatsheet Notes 1 2 3 4 5 table without ID file.link as &amp;#34;Link&amp;#34;, file.ctime as &amp;#34;Created Time&amp;#34; from #work/cobra WHERE type = &amp;#34;cheatsheet&amp;#34; sort file.</description></item><item><title>Code Generation</title><link>https://pietraferreira.github.io/quartz/notes/private/work/code-generation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/code-generation/</guid><description>What is Code Generation? The first part of a compiler analyses the source code into a structure that carries the meaning of the program; this structure is generally the abstract syntax tree that&amp;rsquo;s been checked and decorated.</description></item><item><title>Compiler Flags</title><link>https://pietraferreira.github.io/quartz/notes/general/compiler-flags/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/compiler-flags/</guid><description>Compiler Flags An industrial-strength compiler like GCC and LLVM has hundreds of flags that affect how the compiler behaves. There are many types of compiler flags and there is no easy way to classify types of compiler flags.</description></item><item><title>Compiler Instrumentation</title><link>https://pietraferreira.github.io/quartz/notes/general/compiler-instrumentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/compiler-instrumentation/</guid><description>Compiler Instrumentation As the compiler transforms the source code, it can also &amp;lsquo;insert&amp;rsquo; additional code into a program. These transformations are called compiler instrumentation.</description></item><item><title>Compiler Optimsation</title><link>https://pietraferreira.github.io/quartz/notes/private/work/compiler-optimisation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/compiler-optimisation/</guid><description>Compilers perform a set of transformations on the source code. While some of the transformations are necessary to generate machine code, most of the transformations are done to improve the performance of programs or to reduce the code size.</description></item><item><title>Compiler Toolchains</title><link>https://pietraferreira.github.io/quartz/notes/private/work/compiler-toolchains/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/compiler-toolchains/</guid><description>GNU RISC-V Toolchain CORE-V Toolchain What is a Compiler Toolchain? A compiler toolchain is a set of tools, supporting libraries, and header files that help build a program from source to an executable that can run on a machine.</description></item><item><title>Compilers</title><link>https://pietraferreira.github.io/quartz/notes/private/work/compilers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/compilers/</guid><description>A compiler is a system that converts a program from one language to another. In the context of this course, we refer to a compiler as a program that converts a high-level language like C, C++ to a low-level language like assembly language or an executable format.</description></item><item><title>CORE-V</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/corev-hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/corev-hub/</guid><description>Videos Porting the GNU CORE-V Toolchain Adding an Instruction to the GNU assembler GNU toolchain for CORE-V (Jessica talks about relocation handling here) Cheatsheet Notes 1 2 3 4 5 table without ID file.</description></item><item><title>CORE-V Relocations</title><link>https://pietraferreira.github.io/quartz/notes/private/work/corev-relocations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/corev-relocations/</guid><description>There are two custom relocations:
BDF_RELOC_RISCV_CVPCREL_URS1: 5-bit relocation for the rs1 operand in cv.setup, its relocation number is 225. BFD_RELOC_RISCV_CVPCREL_UI12: 12-bit relocation for 12-bit immediates found in cv.</description></item><item><title>CORE-V Toolchain</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/corev-toolchain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/corev-toolchain/</guid><description>CORE-V is a family of RISC-V cores developed by the OpenHW Group.
The first two projects within the OpenHW Group’s CORE-V family of RISC-V cores are the CV32E40P and CVA6.</description></item><item><title>CPU Architecture</title><link>https://pietraferreira.github.io/quartz/notes/hacking/cpu-architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/cpu-architecture/</guid><description>This is part of a guide that you can find here.
A Von-Neumann architecture consists of four functional units:
Memory Control Unit Arithmetic Logical Unit Input/Output Unit The most important units, Arithmetic Logical Unit (ALU) and Control Unit (CU), are combined in the actual Central Processing Unit (CPU).</description></item><item><title>Cross-Compilation</title><link>https://pietraferreira.github.io/quartz/notes/general/cross-compilation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/cross-compilation/</guid><description>Cross-Compilation To understand the concept of cross-compilation, let’s revisit the definition of a compiler. A compiler is a program that converts a program from one language to another.</description></item><item><title>CS Problems</title><link>https://pietraferreira.github.io/quartz/notes/general/cs-problems/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/cs-problems/</guid><description>CS Problems P vs NP problem. K-clique in a graph. Boolean satisfiability. Travelling Salesman problem. Knapsack problem. Linear Knapsack Problem.</description></item><item><title>CS2001 - Group Project</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/cs2001/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/cs2001/</guid><description>Lecturer: Nadine Aburumman
100% Coursework.
Introduction</description></item><item><title>CS2002 - Software Development</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/cs2002/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/cs2002/</guid><description>Lecturer: Giuseppe Destefanis
50% Coursework (LO1 and LO2) -&amp;gt; Due on the 20th of January.
50% Exam.
Lectures UML - Class Diagram (Week 2 and 3) UML - Sequence Diagram (Week 4 and 5) State Machine Diagrams (Part 1) (Week 8) State Machine Diagrams (Part 2) (Week 9) The Software Process (Week 10) UML - Activity Diagram (Week 11) UML - All-Together (Week 12) References UML @ Classroom - Chapter 3 (Use Case Diagram) (Week 1) Creating a Use Case Diagram</description></item><item><title>CS2002 UML Assignment</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2023-01-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2023-01-09/</guid><description>Use Case Diagram Hassan: Donations and Login. Sammy: Play Game and Register. Pietra: Forum and Check for duplicates. Zeeshan: Access profile and Leaderboard.</description></item><item><title>CS2003 - Exam Revision</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/cs2003-exam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/cs2003-exam/</guid><description>Need to have references.
30 - 40min on questions 1 and 2.
1h on questions 3 and 4.</description></item><item><title>CS2003 - Usability Engineering</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/cs2003/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/cs2003/</guid><description>Lecturer: Monica Pereira
Lectures Week 5 - User Models and Conceptual Design Week 6 - User-Centred Design Week 8 - Specifying User Requirements Week 9 - UE Methods and Techniques - Prototyping, Mockups and Wireframes 100% Exam.</description></item><item><title>CS2004 - Algorithms</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/cs2004/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/cs2004/</guid><description> Lecturer: Mahir Arzoky
60% Coursework -&amp;gt; Due on Friday, Week 21.
40% Exam -&amp;gt; Available on Week 23.
Lectures Introduction Foundation Analysis - (Lecture 2) Time Complexity - (Lecture 4) Asymptotic Notation - (Lecture 4) Data Structures and Applications - (Lecture 5) Sorting - (Lecture 6) Graph Traversal - (Lecture 7) Depth-First Search Exhaustive Search Breath-First Search Best-First Search - A* Search Minimum Spanning Tree (MST) - Prim&amp;rsquo;s Dijkstra&amp;rsquo;s Algorithm - (Lecture 8) Search and Fitness - (Lecture 9) Heuristic Search and Simulated Annealing - (Lecture 10) Introduction to Genetic Algorithms - (Lecture 11) Evolutionary Computation - (Lecture 12) Ant Colony Optimisation and Particle Swarm Optimisation - (Lecture 13) References Classes, Types, and Objects Big O Notation Sets and Maps Trees</description></item><item><title>CS2004 - Data Structures</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/data-structures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/data-structures/</guid><description>CS2004 - Data Structures Data structures are the foundation stone of all algorithms.
We can measure how good a particular data structure is by using big-O notation.</description></item><item><title>CS2004 - Exam</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/cs2004-exam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/cs2004-exam/</guid><description>Run time: varies with the input and grows with input size (best case, worst case and average case).</description></item><item><title>CS2005 - Exam</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/cs2005-exam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/cs2005-exam/</guid><description>4 questions. An answer should be around 500 to 800 words. Question 1 Questions 1 is a short answer about anything.</description></item><item><title>CS2005 - Networks and Operating Systems</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/cs2005/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2005/cs2005/</guid><description> Lecturer: Anastasia Anagnostou
25% Coursework -&amp;gt; Due on the 06 of December.
75% Exam.
Exam Revision. Lab Notes 1 LIST from #university/cs2005/lab</description></item><item><title>CS3002 - AI</title><link>https://pietraferreira.github.io/quartz/notes/university/year3/cs3002/cs3002/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year3/cs3002/cs3002/</guid><description>Lecture Notes 1 2 3 4 5 table without ID file.link as &amp;#34;Link&amp;#34;, file.ctime as &amp;#34;Created Time&amp;#34; from #university/cs3002 WHERE type = &amp;#34;lecture-note&amp;#34; sort file.</description></item><item><title>CS3072 - Hub</title><link>https://pietraferreira.github.io/quartz/notes/university/year3/cs3072/cs3072/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year3/cs3072/cs3072/</guid><description>My supervisor is Dr Rumyana Neykova ( rumyana.neykova@brunel.ac.uk) +44 1895 265513
She can be found at Wilfred Brown 210.</description></item><item><title>Debugging Techniques</title><link>https://pietraferreira.github.io/quartz/notes/private/work/debugging-techniques/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/debugging-techniques/</guid><description>Debugging is an essential part of the software development lifecycle. Even with the most robust programming practices bugs creep in, and debugging them is not a pleasant experience.</description></item><item><title>DejaGNU Notes</title><link>https://pietraferreira.github.io/quartz/notes/private/work/dejagnu-documentation-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/dejagnu-documentation-notes/</guid><description>DejaGNU Notes General notes on DejaGNU.
It is implemented as the runtest command: runtest [options] [test]
Comprises of a command to run tests, language in which to write the tests (expect), a standard directory structure for the tests and a set of configuration files.</description></item><item><title>Depth-First Search</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/depth-first-search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/depth-first-search/</guid><description>Depth-First Search It allows us to explore nodes and edges of a graph.
The traversal will go as far as possible down a path until a dead end is reached.</description></item><item><title>Dijkstra Algorithm</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/dijkstra-algorithm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/dijkstra-algorithm/</guid><description>It is used to determine the shortest path from one node in the graph to every other node within the same graph, provided they can be reached from the source node.</description></item><item><title>Dotfile Management</title><link>https://pietraferreira.github.io/quartz/notes/general/dotfile-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/dotfile-management/</guid><description>Dotfile Management My dotfiles can be found on GitHub.
Just type config anywhere, for example config status to manage the repo.</description></item><item><title>Embedded Applications</title><link>https://pietraferreira.github.io/quartz/notes/general/embedded-applications/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/embedded-applications/</guid><description>Embedded Applications The definition and use case of embedded systems have evolved over time. While embedded systems are used to denote computing systems performing very specific tasks, it is no longer the case in many situations.</description></item><item><title>Endianness</title><link>https://pietraferreira.github.io/quartz/notes/hacking/endianness/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/endianness/</guid><description>This is part of a guide that you can find here.
Bytes are loaded in different order, called endianness.
Big-endian: the digits with the highest valence are initially.</description></item><item><title>Engineer Training Hub</title><link>https://pietraferreira.github.io/quartz/notes/private/work/engineer-training-hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/engineer-training-hub/</guid><description>1 2 3 4 table without ID title as &amp;#34;Title&amp;#34;, file.ctime as &amp;#34;Created Time&amp;#34;, file.link as &amp;#34;Link&amp;#34; from #work/engineer-training sort file.</description></item><item><title>Equivalent Grammars</title><link>https://pietraferreira.github.io/quartz/notes/general/equivalent-grammars/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/equivalent-grammars/</guid><description>Equivalent Grammars Equivalent grammars define the same language:
G A $\rightarrow$ Ax | y
G' A $\rightarrow$ yB B $\rightarrow$ yB | $\varepsilon$</description></item><item><title>Everest</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/everest/everest-hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/everest/everest-hub/</guid><description>Cheatsheet Notes 1 2 3 4 5 table without ID file.link as &amp;#34;Link&amp;#34;, file.ctime as &amp;#34;Created Time&amp;#34; from #work/everest WHERE type = &amp;#34;cheatsheet&amp;#34; sort file.</description></item><item><title>Evolutionary Programming</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/evolutionary-programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/evolutionary-programming/</guid><description>Similar to Genetic Algorithms.
The emphasis here is on mutation and there is no crossover.
Every individual mutates, doubling the population.</description></item><item><title>Exam Revision Plan</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/year2-examplan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/year2-examplan/</guid><description>Exam timetable: CS2003 Usability Engineering (04/05) Software Development and Management (10/05) Moodle environment. Lectures.</description></item><item><title>Exhaustive Search</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/exhaustive-search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/exhaustive-search/</guid><description>It systematically evaluates every possible path in a graph. It is guaranteed to find what we are looking for, however it is unsuitable for most real world problems.</description></item><item><title>Facial Recognition Google Board - Script</title><link>https://pietraferreira.github.io/quartz/notes/private/work/facial-recognition-board-talk-script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/facial-recognition-board-talk-script/</guid><description>Facial Recognition Google Board - Script Will was the one to actually deliver this talk as I wasn&amp;rsquo;t feeling well on that day.</description></item><item><title>File Encryption</title><link>https://pietraferreira.github.io/quartz/notes/hacking/file-encryption/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/file-encryption/</guid><description>File Encryption Windows 1 2 PS Import-Module .\Invoke-AESEncryption.ps1 PS Invoke-AESEncryption.ps1 -Mode Encrypt -Key &amp;#39;p4ssw0rd&amp;#39; -Path .\scan-results.txt Linux Encrypt 1 openssl enc -aes256 -iter 100000 -pbkdf2 -in /etc/passwd -out passwd.</description></item><item><title>File Transfer Cheatsheet</title><link>https://pietraferreira.github.io/quartz/notes/hacking/htb-file-transfer-cheatsheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/htb-file-transfer-cheatsheet/</guid><description>File Transfer Cheatsheet Command Description  Invoke-WebRequest https://&amp;lt;snip&amp;gt;/PowerView.ps1 -OutFile PowerView.ps1 Download a file with PowerShell IEX (New-Object Net.</description></item><item><title>File Transfers</title><link>https://pietraferreira.github.io/quartz/notes/hacking/htb-file-transfers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/htb-file-transfers/</guid><description>File Transfers Netcat ( here) RDP ( here) File Encryption Nginx Living off the land Windows Download Operations PowerShell Base64 Encode and Decode We can encode a file to a base64 string, copy contents from the terminal and then perform the reverse operation, meaning decoding the file in the original content.</description></item><item><title>Files Transfer - HTB Writeup</title><link>https://pietraferreira.github.io/quartz/notes/hacking/files-transfer-htb-writeup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/files-transfer-htb-writeup/</guid><description>File Transfers PowerShell Base64 Encode and Decode We can encode a file to a base64 string, copy contents from the terminal and then perform the reverse operation, meaning decoding the file in the original content.</description></item><item><title>Fixups</title><link>https://pietraferreira.github.io/quartz/notes/general/fixups/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/fixups/</guid><description>Fix-ups Fix-ups are used to represent information in instructions which is currently unknown. During instruction encoding, if some information is unknown (such as a memory location of an external symbol), it is encoded as if the value is equal to 0 and a fix-up is emitted which contains information on how to rewrite the value when information is known.</description></item><item><title>Floyd-Warshall</title><link>https://pietraferreira.github.io/quartz/notes/general/floyd-warshall/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/floyd-warshall/</guid><description>Floyd-Warshall It is a shortest path algorithm that calculates the shorted path between all pairs of vertices.
Negative edges are allowed.</description></item><item><title>Formal Languages</title><link>https://pietraferreira.github.io/quartz/notes/general/formal-languages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/formal-languages/</guid><description>Formal Languages Formal languages are used among others as the basis for defining the grammar of programming languages and formalised versions of subsets of natural languages in which the words of the language represent concepts that are associated with particular meanings or semantics.</description></item><item><title>Forum DevLog</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/forum-devlog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/forum-devlog/</guid><description>Forum DevLog Achievements Initialised the project by creating the HTML and CSS pages.
Added support to smaller screens.</description></item><item><title>Forum DevLog 23/02</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2023-02-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/2023-02-23/</guid><description>Forum DevLog Today I&amp;rsquo;m working on continuing to develop the comment and reply system within the forum.
Currently, the admin has to add comments and replies manually using the dashboard.</description></item><item><title>Foundation of Algorithm Analysis</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/alg-foundation-analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/alg-foundation-analysis/</guid><description>Running time. Pseudo-code. Counting primitive operations. Running Time Varies with the input and typically grows with the input size.</description></item><item><title>Garbage Collection</title><link>https://pietraferreira.github.io/quartz/notes/general/garbage-collection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/garbage-collection/</guid><description>Garbage Collection How do you reuse memory in a program?
Explicit allocation and free: malloc/free (C), new/delete (C++).
It traces garbage collection and does reference counting.</description></item><item><title>GCC</title><link>https://pietraferreira.github.io/quartz/notes/general/gcc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/gcc/</guid><description>The popular gcc compiler ships with the gcc toolchain. It can be downloaded from GCC mirror sites. In order to download the precompiled binaries that are ready to use, go to the  Installing GCC: Binaries page.</description></item><item><title>GCC Guide by Maxim</title><link>https://pietraferreira.github.io/quartz/notes/private/work/gcc-guide-by-maxim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/gcc-guide-by-maxim/</guid><description>GCC Guide by Maxim 1: How Generic GCC lowers GIMPLE memory operations into RTL memory operations, and how we can have a hand in its operation This is the top level function that GCC calls when it is lowering GIMPLE -&amp;gt; RTL, and wishes to generate a memory move/memory copy operation:</description></item><item><title>GDB</title><link>https://pietraferreira.github.io/quartz/notes/private/work/gdb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/gdb/</guid><description>All the basic commands can be found here.
Remote Debugging gdb can be used to debug programs running on another machine.</description></item><item><title>Generate Shellcode</title><link>https://pietraferreira.github.io/quartz/notes/hacking/generate-shellcode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/generate-shellcode/</guid><description>This is part of a guide that you can find here.
We have to pay attention to:
Architecture Platform Bad Characters We can use msfvenom to generate our shellcode:</description></item><item><title>GNU</title><link>https://pietraferreira.github.io/quartz/notes/general/gnu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/gnu/</guid><description>Extensive collection of free software which can be used as an operating system or in parts with other operating systems.</description></item><item><title>Graphs</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/graphs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/graphs/</guid><description>Graphs A graph consists of:
A set of fixed objects, nodes. A set of edges, which may have arrows and have values attached.</description></item><item><title>Graphviz</title><link>https://pietraferreira.github.io/quartz/notes/private/work/graphviz/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/graphviz/</guid><description>Graphiz is a package of tools supporting the DOT graph description language.
DOT is a textual representation of arbitrary graphs (suffix .</description></item><item><title>HackTheBox</title><link>https://pietraferreira.github.io/quartz/notes/general/hackthebox/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/hackthebox/</guid><description>HackTheBox Everything related to HackTheBox.
Files Transfers ( here) Netcat ( here) Stack-based Buffer Overflows on Linux x86 ( here) MSFConsole ( here) Meterpreter ( here) Cheatsheets Files Transfers Cheatsheet ( here) NMap Cheatsheet ( here) Write-ups Driver Pandora Secret All 1 2 3 4 table without ID title as &amp;#34;Title&amp;#34;, file.</description></item><item><title>Halting Problem</title><link>https://pietraferreira.github.io/quartz/notes/general/halting-problem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/halting-problem/</guid><description>A program to determine if any given program will complete in finite time.
So imagine you write this program, P, and in its main program it has:</description></item><item><title>Hardware Loops - COREV</title><link>https://pietraferreira.github.io/quartz/notes/private/work/hardware-loops-gcc-corev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/hardware-loops-gcc-corev/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 (define_insn &amp;#34;set_hwloop_cvstart&amp;#34; [(set (match_operand:SI 0 &amp;#34;le_register_operand&amp;#34; &amp;#34;=t&amp;#34;) (label_ref (match_operand 1 &amp;#34;&amp;#34; &amp;#34;&amp;#34; )) ) (use (match_operand:SI 2 &amp;#34;immediate_operand&amp;#34; &amp;#34;I&amp;#34;)) ] &amp;#34;&amp;#34; &amp;#34;cv.</description></item><item><title>Hash Tables</title><link>https://pietraferreira.github.io/quartz/notes/general/hash-tables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/hash-tables/</guid><description>Hash Tables A hash table is a data structure which offers a fast implementation of the associative array (abstract data structure, also called a map, symbol table or dictionary) .</description></item><item><title>Heapsort</title><link>https://pietraferreira.github.io/quartz/notes/general/heapsort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/heapsort/</guid><description>Heapsort Uses binary heap trees to sort (I think!).
It has average : $O_{n\ log\ n}$ Worst case performance: $O_{n\ log\ n}$</description></item><item><title>Help</title><link>https://pietraferreira.github.io/quartz/notes/general/help/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/help/</guid><description>HELP Various cheatsheets of different application I use and all the help I can get compiled in one place.
Cheatsheets Vim iTerm2 Obsidian Tmux HackTheBox How to manually check an Assembly test How to add an instruction to the GNU Assembler Slides Hacking x86 CheatSheet Reverse Engineering Malicious Code Linux System Call Table for x86-64 Other Commands Dump Linux Fundamentals Dotfiles Management Courses Dump All of them 1 2 3 4 table without ID title as &amp;#34;Title&amp;#34;, file.</description></item><item><title>Heuristic Seach, Hill Climbing and Simulated Annealing</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/hc-and-sa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/hc-and-sa/</guid><description>Heuristic Search Some difficult problems (NP-hard) cannot be solved in a straightforward manner.
We need to develop approximation algorithms to solve these problems.</description></item><item><title>How to add an instruction to the GNU assembler</title><link>https://pietraferreira.github.io/quartz/notes/general/how-to-add-instructions-to-as/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/how-to-add-instructions-to-as/</guid><description>How to add an instruction to the GNU assembler We can use cv.starti as an example. It is part of the hardware loops extension and declares the address of the offset to the start of the loop as well as the loop number, 0 or 1 depending if it is an inner or outer loop.</description></item><item><title>How to Manually Check a Test</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/how-to-manually-check-as-test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/cobra/how-to-manually-check-as-test/</guid><description>How to Manually Check a Test Instruction listing:
So we have:
1 011u uurr ruud dd00 For example, if we want to test:</description></item><item><title>How to Use Creduce by Ed</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/tiger/2021-04-23-how-to-use-creduce-by-ed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/tiger/2021-04-23-how-to-use-creduce-by-ed/</guid><description>As for steps on how to use Creduce:
Take a copy of the failing test in a temporary directory:
1 2 3 mkdir -p &amp;lt;temporary_dir&amp;gt; cp &amp;lt;failing_test.</description></item><item><title>How to Write a LLVM Backend</title><link>https://pietraferreira.github.io/quartz/notes/private/work/how-to-write-a-llvm-backend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/how-to-write-a-llvm-backend/</guid><description>How to Write a LLVM Backend More information here.
LLVM converts LLVM IR to code for a specific target, the steps are:</description></item><item><title>Howto Table</title><link>https://pietraferreira.github.io/quartz/notes/private/work/howto-table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/howto-table/</guid><description>The relocation table records the list of items that the file needs (from other object files or libraries).
The relocation record contains information like: which instructions need to be relocated (the offsets), which symbols are involved with the relocation and how to relocate the files relative to the symbols.</description></item><item><title>HTB - Catch Writeup</title><link>https://pietraferreira.github.io/quartz/notes/hacking/htb-catch-writeup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/htb-catch-writeup/</guid><description>HTB - Catch Catching an API key out of an Android APK file.
Nmap 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 ~/htb/catch &amp;gt; sudo nmap -sC -sV -oA nmap/catch 10.</description></item><item><title>HTB - Driver</title><link>https://pietraferreira.github.io/quartz/notes/hacking/htb-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/htb-driver/</guid><description>HTB - Driver Printer exploitation!!
IP: 10.10.11.106
1 sudo nmap -sC -sV -oA driver.nmap $ip Where:</description></item><item><title>HTB - Pandora</title><link>https://pietraferreira.github.io/quartz/notes/hacking/htb-pandora/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/htb-pandora/</guid><description>HTB - Pandora We first enumerate:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 sudo nmap -sC -sV -oA pandora 10.</description></item><item><title>HTB - Secret</title><link>https://pietraferreira.github.io/quartz/notes/hacking/htb-secret/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/htb-secret/</guid><description>HTB - Secret It is all about secret ways to extract information from applications.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ~/htb/secret &amp;gt; sudo nmap -sC -sV -oA nmap/secret 10.</description></item><item><title>Identify Return Address</title><link>https://pietraferreira.github.io/quartz/notes/hacking/identify-return-address/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/identify-return-address/</guid><description>Identify Return Address We need a memory address where our NOPs are located to tell the EIP to jump to it.</description></item><item><title>Impacket and Random Stuff</title><link>https://pietraferreira.github.io/quartz/notes/hacking/impacket-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/impacket-notes/</guid><description>Nmap Can use the -Pn switch to enumerate machines when packets are blocked by firewall. SMB Sever Message Block Usually port 445 1 smbclient -L {taget_IP} -U Administrator Impacket It is a framework written in Python for working with network protocols.</description></item><item><title>Inkblot Algorithm</title><link>https://pietraferreira.github.io/quartz/notes/general/inkblot-algorithm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/inkblot-algorithm/</guid><description>Inkblot Algorithm Couldn&amp;rsquo;t find much online about it, but I think it&amp;rsquo;s a &amp;ldquo;populating&amp;rdquo; algorithm to find a path (A-&amp;gt;B).</description></item><item><title>Instruction Set Semantics</title><link>https://pietraferreira.github.io/quartz/notes/general/instruction-set-semantics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/instruction-set-semantics/</guid><description>Instruction Set Semantics Most general is the three address instruction set:
result = operand1 operator operand2 ^44cfb5
Two address instruction sets use one of the operand addresses for the result.</description></item><item><title>Intermediate Representations</title><link>https://pietraferreira.github.io/quartz/notes/general/intermediate-representations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/intermediate-representations/</guid><description>Intermediate Representations There are three main ones:
Parse Trees IDK What this is sorry :( Three Address Code</description></item><item><title>Intro to Embedded Systems Software and Development Environments - Week 1</title><link>https://pietraferreira.github.io/quartz/notes/general/coursera-intro-to-embedded-systems-week1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/coursera-intro-to-embedded-systems-week1/</guid><description/></item><item><title>Introduction</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/group-project-intro-gp20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/group-project-intro-gp20/</guid><description>The theme of the project will be based on the UN Sustainable Development Goals.
It will be a full-stack web application with a server backend, pulling and pushing data from and to a data source.</description></item><item><title>Introduction to Algorithms</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/alg-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/alg-intro/</guid><description>An algorithm is a set of steps for solving a problem. It is a well-defined computational procedure that takes some value(s) as input and produces some value(s) as output.</description></item><item><title>Introduction to Genetic Algorithms</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/intro-gen-algorithms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/intro-gen-algorithms/</guid><description>Genetic Algorithms belong to a family of techniques that are inspired from evolution theory.
Each gene is a binary digit.</description></item><item><title>Introduction to Networking</title><link>https://pietraferreira.github.io/quartz/notes/hacking/htb-intro-networking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/htb-intro-networking/</guid><description>Introduction to Networking Overview There is a wide array of topologies (mesh, tree, star), mediums (ethernet, fiber, coax, wireless) and protocols (TCP, UDP, IPX).</description></item><item><title>Introduction to RISC-V</title><link>https://pietraferreira.github.io/quartz/notes/private/work/introduction-to-riscv/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/introduction-to-riscv/</guid><description>Introduction to RISC-V Notes on the Introduction to RISC-V LinuxFoundation course.
Chapter 1 - Getting to know RISC-V Overview Difference between RISC-V ISA and RISC-V international.</description></item><item><title>ISA (Instruction Set Architecture)</title><link>https://pietraferreira.github.io/quartz/notes/private/work/isa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/isa/</guid><description>An instruction set architecture (ISA) is an abstract model of a computer. It is also referred to as architecture or computer architecture.</description></item><item><title>iTerm2 Cheatsheet</title><link>https://pietraferreira.github.io/quartz/notes/general/iterm2-cheatsheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/iterm2-cheatsheet/</guid><description>iTerm2 Cheatsheet I basically copied this from a Git repo&amp;hellip; all very useful.
Tabs and Windows Function Shortcut New Tab ⌘ + T Close Tab or Window ⌘ + W (same as many mac apps) Go to Tab ⌘ + Number Key (ie: ⌘2 is 2nd tab) Go to Split Pane by Direction ⌘ + Option + Arrow Key Cycle iTerm Windows ⌘ + backtick (true of all mac apps and works with desktops/mission control) Splitting Split Window Vertically (same profile) ⌘ + D Split Window Horizontally (same profile) ⌘ + Shift + D (mnemonic: shift is a wide horizontal key) Moving Move a pane with the mouse ⌘ + Alt + Shift and then drag the pane from anywhere Fullscreen Fullscreen ⌘+ Enter Maximize a pane ⌘ + Shift + Enter (use with fullscreen to temp fullscreen a pane!</description></item><item><title>Jump Table</title><link>https://pietraferreira.github.io/quartz/notes/private/work/jump-table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/jump-table/</guid><description>Jump Table It can either be an array of pointers to functions or an array of machine code jump instructions.</description></item><item><title>Knowledge Hub</title><link>https://pietraferreira.github.io/quartz/notes/general/knowledge-hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/knowledge-hub/</guid><description>Knowledge Hub Where all of my notes live!!! There are no rules here 😎
General HELP - very useful shortcuts for Vim, Obsidian (and plugins), tmux etc and general help.</description></item><item><title>Kruskal's Algorithm</title><link>https://pietraferreira.github.io/quartz/notes/general/kruskals-algorithm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/kruskals-algorithm/</guid><description>Kruskal&amp;rsquo;s Algorithm It is a minimum spanning subtree algorithm.
It performs well for sparse graphs due to simple data structures: $O_(E\ log\ N)$.</description></item><item><title>Lexical Analysis</title><link>https://pietraferreira.github.io/quartz/notes/general/lexical-analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/lexical-analysis/</guid><description>Lexical Analysis It is the process of grouping individual characters into basic entities, known as tokens or lexemes.
Examples: integer, variable, addition operator.</description></item><item><title>Linear Equations</title><link>https://pietraferreira.github.io/quartz/notes/general/linear-equations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/linear-equations/</guid><description>Linear Equations The basic representation is: $$\begin{align*} \begin{pmatrix} a_{11} &amp;amp; a_{12}\\ a_{21} &amp;amp; a_{22} \end{pmatrix} \begin{pmatrix} x_1\\ x_2 \end{pmatrix} = \begin{pmatrix} b_1\\ b_2 \end{pmatrix} \end{align*}$$</description></item><item><title>Linear Knapsack Problem</title><link>https://pietraferreira.github.io/quartz/notes/general/linear-knapsack-problem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/linear-knapsack-problem/</guid><description>Linear Knapsack Problem Also known as the stock cutting problem.
Consider capacity 100, and object of size {53, 53, 49, 49, 3}.</description></item><item><title>Linked List</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/linked-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/linked-list/</guid><description>Linked List It maintains the insertion order of elements, however they are not indexed. When searching, we start with the head and work our way through.</description></item><item><title>Linker</title><link>https://pietraferreira.github.io/quartz/notes/private/work/linker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/linker/</guid><description>Official documentation: https://sourceware.org/binutils/docs/ld/
The linker combines a number of object and archive files, relocates their data and ties up symbol references.</description></item><item><title>Linker Relaxation</title><link>https://pietraferreira.github.io/quartz/notes/general/linker-relaxation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/linker-relaxation/</guid><description>How the linker optimises instructions for the compiler by having a second relaxation.
Example 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 $ cat test.</description></item><item><title>Linker Relaxation</title><link>https://pietraferreira.github.io/quartz/notes/private/work/2022-07-03-relaxation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/2022-07-03-relaxation/</guid><description>Relaxation Most companies do assembly relaxation whereas we do linker relaxation. The assembler typically works on one source at a time so it can&amp;rsquo;t see anything that is related to other source code files whereas the linker can.</description></item><item><title>Linux Fundamentals</title><link>https://pietraferreira.github.io/quartz/notes/general/linux-fundamentals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/linux-fundamentals/</guid><description>Linux Fundamentals Bunch of old notes on Linux stuff.
Find command 1 2 3 4 5 6 7 8 9 10 11 -type f -&amp;gt; type: file -name *.</description></item><item><title>Lists</title><link>https://pietraferreira.github.io/quartz/notes/general/lists/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/lists/</guid><description>Lists A list is a sequence of zero or more data items, with the total number of items being the length of the list.</description></item><item><title>LLVM</title><link>https://pietraferreira.github.io/quartz/notes/general/llvm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/llvm/</guid><description>The LLVM Project is a collection of modular and reusable compiler and toolchain technologies. Prebuilt binaries of the LLVM toolchain can be downloaded from the LLVM Download Page.</description></item><item><title>LOLBins</title><link>https://pietraferreira.github.io/quartz/notes/hacking/lolbins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/lolbins/</guid><description>Aka Living off the land binaries, which are binaries that an attacker can use to perform actions beyond their original purpose.</description></item><item><title>Meet-up 2020 CORE-V - Script</title><link>https://pietraferreira.github.io/quartz/notes/private/work/meetup-2020-corev-script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/meetup-2020-corev-script/</guid><description>Slides can be found here.
Good evening, I’m Pietra and today together with my colleagues Mary and Jessica we will be presenting our work on porting the GNU CORE-V toolchain.</description></item><item><title>Meterpreter</title><link>https://pietraferreira.github.io/quartz/notes/hacking/htb-meterpreter-cheatsheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/htb-meterpreter-cheatsheet/</guid><description>Meterpreter Command Description help Open Meterpreter usage help. run &amp;lt;scriptname&amp;gt; Run Meterpreter-based scripts; for a full list check the scripts/meterpreter directory.</description></item><item><title>Minimum Spanning Tree</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/minimum-spanning-tree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/minimum-spanning-tree/</guid><description>It is a subtree with the minimum possible edge weight that connects all nodes together.
There must exist no cycles in the tree, meaning it is usually a complete graph.</description></item><item><title>Modules</title><link>https://pietraferreira.github.io/quartz/notes/university/year-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year-2/</guid><description>Modules A list of all the different modules I am taking during my second year.
Year 2 is 1/3 of the final grade!</description></item><item><title>Modules</title><link>https://pietraferreira.github.io/quartz/notes/university/year-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year-3/</guid><description>Modules A list of all the different modules I am taking during my third year.
Year 3 is 2/3 of the final grade!</description></item><item><title>MSFConsole Cheatsheet</title><link>https://pietraferreira.github.io/quartz/notes/hacking/htb-msfconsole-cheatsheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/htb-msfconsole-cheatsheet/</guid><description>MSFConsole Cheatsheet Command Description show exploits Show all exploits within the Framework. show payloads Show all payloads within the Framework.</description></item><item><title>Netcat</title><link>https://pietraferreira.github.io/quartz/notes/hacking/netcat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/netcat/</guid><description>Networking utility for reading from and writing to network connections using TCP or UDP.
Listening 1 victim@target:~$ nc -l -p 8080 &amp;gt; SharpKatz.</description></item><item><title>Newton-Raphson Iteration</title><link>https://pietraferreira.github.io/quartz/notes/general/newton-raphson/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/newton-raphson/</guid><description>Newton-Raphson Iteration Want to find the root of $f(x)$, for example a value for $x$ such that $f(x) = 0$.</description></item><item><title>Nginx</title><link>https://pietraferreira.github.io/quartz/notes/hacking/nginx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/nginx/</guid><description>Used for transferring files to Apache.
Create Directory to Handle Uploaded Files 1 sudo mkdir -p /var/www/uploads/SecretUploadDirectory Change the Owner to www-data 1 sudo chown -R www-data:www-data /var/www/uploads/SecretUploadDirectory Create Nginx Configuration File In /etc/nginx/sites-available/upload.</description></item><item><title>Nmap Cheatsheet</title><link>https://pietraferreira.github.io/quartz/notes/hacking/nmap-cheatsheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/nmap-cheatsheet/</guid><description>nmap flag Description -sV Versions -p &amp;lt;x&amp;gt; or -p- Port scan for port or all -Pn Disable host discovery -A Enables OS and version detection, execute built-in scripts -sC Scan with the default nmap scripts -v Verbose mode -sU UDP port scan -sS TCP SYN port scan` [!</description></item><item><title>P vs NP Problem</title><link>https://pietraferreira.github.io/quartz/notes/general/p-vs-np/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/p-vs-np/</guid><description>P vs NP Problem Imagine an Oracle. Guesses and gets the right answer.
Build by (infinitely) many processors in a tree.</description></item><item><title>Parallel Computing Laboratory</title><link>https://pietraferreira.github.io/quartz/notes/private/work/parlab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/parlab/</guid><description>Parallel Computing Laboratory The Par Lab was a five-year project to advance parallel computing funded by Microsoft and Intel for $10M over 5 years, from 2008 to 2013.</description></item><item><title>Parse Trees</title><link>https://pietraferreira.github.io/quartz/notes/general/parse-trees/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/parse-trees/</guid><description>Grammatically $S \rightarrow A | B$ $A \rightarrow A\ x | y$ $B \rightarrow z$
Parse tree for yxxz: Parsing Sentences Apply successive productions.</description></item><item><title>PLT and GOT</title><link>https://pietraferreira.github.io/quartz/notes/private/work/plt-and-got/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/plt-and-got/</guid><description>Procedure Linkage Table and Global Offset Table If a program receives an incorrect input for example, it terminates, rendering useless all of the relocation work performed by the dynamic linker.</description></item><item><title>Prim's Algorithm</title><link>https://pietraferreira.github.io/quartz/notes/general/prims-algorithm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/prims-algorithm/</guid><description>Prim&amp;rsquo;s Algorithm It is a minimum spanning tree algorithm.
It scales well, fast with dense graphs.
It has a of $O_{E\ log\ N}$ with binary heap and $O_{E\ +\ log\ N}$ with Fibonacci heap.</description></item><item><title>Projects</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects-hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects-hub/</guid><description>Project 1 2 3 4 5 table without ID file.link as &amp;#34;Link&amp;#34;, file.ctime as &amp;#34;Created Time&amp;#34; from #work/tiger WHERE type = &amp;#34;cheatsheet&amp;#34; sort file.</description></item><item><title>Queue</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/queue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/queue/</guid><description>Queue First in, last out (FIFO), double linked list works well. Think of a standard queue, for example at the bank.</description></item><item><title>Quicksort</title><link>https://pietraferreira.github.io/quartz/notes/general/quicksort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/quicksort/</guid><description>It picks a midpoint (approximate the median) and partition values, into those less than the midpoint (left) and greater (right).</description></item><item><title>Radix Sort</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/radix-sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/radix-sort/</guid><description>Radix Sort It is a non-comparison sorting method which only works on binary or integer data.
It takes $O(nb)$ time complexity, where:</description></item><item><title>Random Priviledge Escalation Notes</title><link>https://pietraferreira.github.io/quartz/notes/hacking/priv-escalation-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/priv-escalation-notes/</guid><description>Remove duplicates and clean file:
1 sort &amp;lt;file&amp;gt; | uniq &amp;gt; &amp;lt;output_file&amp;gt; Find processes in shell:
1 find / -perm -u=s -type f 2&amp;gt;/dev/nul Windows Privilege Scalation The easiest way to gain access to another user is to gather credentials from a compromised machine.</description></item><item><title>RDP</title><link>https://pietraferreira.github.io/quartz/notes/hacking/rdp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/rdp/</guid><description>Stands for Remote Desktop Protocol.
Mounting using rdesktop 1 rdesktop 10.10.10.132 -d HTB -u administrator -p &amp;#39;Password&amp;#39; -r disk:linux=&amp;#39;home/user/rdesktop/files&amp;#39; 1 xfreerdp /v:10.</description></item><item><title>Relocation Prototype - Project Overview</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/relocation-prototype-project-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/relocation-prototype-project-overview/</guid><description>Introduction to the project needed for future psABI meeting eg: in COREV we have custom relocations that live in the reserved space, but we need to be able to share that reserved space with other tool chains.</description></item><item><title>Relocation Prototype Reports</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/relocation-prototype-hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/relocation-prototype/relocation-prototype-hub/</guid><description>Cheatsheet Notes 1 2 3 4 5 table without ID file.link as &amp;#34;Link&amp;#34;, file.ctime as &amp;#34;Created Time&amp;#34; from #work/relocation-prototype WHERE type = &amp;#34;cheatsheet&amp;#34; sort file.</description></item><item><title>Relocations</title><link>https://pietraferreira.github.io/quartz/notes/private/work/relocations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/relocations/</guid><description>Different programs will be different sizes, so when the shared library gets mapped into the address space of different programs, it will be at different addresses.</description></item><item><title>Relocations - COREV</title><link>https://pietraferreira.github.io/quartz/notes/private/work/relocations-corev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/relocations-corev/</guid><description>Relocations - COREV what is complain and overflow?
howto_table in bfd/elfxx-riscv.c
what is size? bitsize? pc relative is a pc relative rellocation</description></item><item><title>REST API</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/rest-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2001/rest-api/</guid><description>REST API APIs provide a standardised way for two applications to send data back and forth.
REST is a set of guidelines that software can use to communicate over the internet in order to make integrations simple and scalable.</description></item><item><title>Richest Customer Wealth</title><link>https://pietraferreira.github.io/quartz/notes/general/richest-customer-wealth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/richest-customer-wealth/</guid><description>Intuition I&amp;rsquo;d sum each row, find the one with the highest value and then return that value.
Approach Complexity Time complexity: $O(m * n)$</description></item><item><title>RISC-V</title><link>https://pietraferreira.github.io/quartz/notes/private/work/riscv/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/riscv/</guid><description>RISC-V Introduction to RISC-V RISC-V Assembler Reference Instruction Set Reference RISC-V IS Cheatsheet ( here) RISC-V ASM Cheatsheet ( here) RISC-V Assembly for Beginners ( here) RISC-V Assembly Code Examples ( here)</description></item><item><title>RISC-V Assembler Reference</title><link>https://pietraferreira.github.io/quartz/notes/private/work/riscv-assembler-reference/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/riscv-assembler-reference/</guid><description>This document gives an overview of RISC-V assembly language. First, an introduction to assembler and linker concepts, then sections describing assembler directives, pseudo- instructions, relocation functions, and assembler concepts such as labels, relative and absolute addressing, immediate values, constants and finally control and status registers.</description></item><item><title>RISC-V Toolchain</title><link>https://pietraferreira.github.io/quartz/notes/general/riscv-toolchain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/riscv-toolchain/</guid><description>RISC-V Toolchain There are two RISC-V toolchains that are popularly used:
The GNU RISC-V toolchain The LLVM RISC-V toolchain Both toolchains provide a state-of-the-art optimising compiler, assembler, linker, and various other tools to build applications that run on RISC-V machines.</description></item><item><title>Running Sum of 1D Array</title><link>https://pietraferreira.github.io/quartz/notes/general/running-sum-of-1d-array/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/running-sum-of-1d-array/</guid><description>Intuition First I thought about just summing index 1, not 0, with the previous element (e.g.: i - 1). However, the output needs to be an integer array.</description></item><item><title>Search and Fitness</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/search-and-fitness/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/search-and-fitness/</guid><description>Definition of a Search Problem For some problems we need to search for a solution from a (usually) very large number of possibilities, search problems.</description></item><item><title>Selection Sort</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/selection-sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/selection-sort/</guid><description>Selection Sort It sorts an array by repeatedly finding the minimum element from the unsorted part of the array and puts it at the beginning.</description></item><item><title>Sets and Maps</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/sets-and-maps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/sets-and-maps/</guid><description>Sets are a collection of objects:
They might be ordered or unordered. Two variants: Single instance of any object.</description></item><item><title>Shell Sort</title><link>https://pietraferreira.github.io/quartz/notes/general/shell-sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/shell-sort/</guid><description>Shell sort adds one more loop outside bubble sort.
It starts by sorting small overlapping subsets, then makes then smaller but by then the array is mostly sorted.</description></item><item><title>Software Development Diagrams - Assigment</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2022-11-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2022-11-28/</guid><description>Software Development Diagrams - Assignment Name: Register User Short Description: &amp;hellip; Precondition:
User doesn&amp;rsquo;t have an account User has an email address available Postcondition: User has an account Error situations: Misspelt email.</description></item><item><title>Sorting</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/sorting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/sorting/</guid><description>Sorting The sorting problem is a mapping from $x$ to $y$, where:
$x$ and $y$ are both n length real vectors (lists and/or arrays).</description></item><item><title>Source Code Optimisation</title><link>https://pietraferreira.github.io/quartz/notes/general/source-code-optimisation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/source-code-optimisation/</guid><description>Source Code Optimisation In addition to compiler optimisations, there are several software engineering techniques to reduce code size. These techniques take advantage of well-known software engineering methodologies and programming language features.</description></item><item><title>Specifying User Requirements</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/specifying-user-requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/specifying-user-requirements/</guid><description>Selecting an appropriate UCD (User Centred Design) method is vital.
Human-Centred Design Process: ISO 13407 Its goal is to achieve usable systems.</description></item><item><title>Stack</title><link>https://pietraferreira.github.io/quartz/notes/general/stack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/stack/</guid><description>Stack Last in, first out (LIFO), simple list works well for this. Think of a stack of plates.</description></item><item><title>Stack-based Overflow - Linux x86</title><link>https://pietraferreira.github.io/quartz/notes/hacking/htb-stack-based-overflow-linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/htb-stack-based-overflow-linux/</guid><description>They are caused by incorrect program code, which cannot process too large amounts of data correctly by the CPU and can, therefore, manipulate the CPU&amp;rsquo;s processing.</description></item><item><title>Stack-overflow Prevention Techniques and Mechanisms</title><link>https://pietraferreira.github.io/quartz/notes/hacking/so-prevention-techniques/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/so-prevention-techniques/</guid><description>Stack-overflow Prevention Techniques and Mechanisms Security mechanisms:
Canaries Address Space Layout Randomisation ( ) Data Execution Prevention (DEP) Canaries They are known values written to the stack between buffer and control data to detect buffer overflows.</description></item><item><title>Started working on Leetcode</title><link>https://pietraferreira.github.io/quartz/notes/general/2023-05-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/2023-05-24/</guid><description>I downloaded the Coding Interview book and here is all the solutions on Leetcode.</description></item><item><title>State Machine Diagrams - Part 1</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/state-machine-diagrams-part1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/state-machine-diagrams-part1/</guid><description>Introduction Every object takes a finite number of different stages during its life. State machine diagrams are used as follows:</description></item><item><title>State Machine Diagrams - Part 2</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/state-machine-diagrams-part2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/state-machine-diagrams-part2/</guid><description>Recap: A Simple State Composite State Also known as complex state or nested state.
It contains other states, substates.</description></item><item><title>Strode College Talk - Script</title><link>https://pietraferreira.github.io/quartz/notes/private/work/strode-talk-script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/strode-talk-script/</guid><description>Strode College Talk - Script What do I do? I&amp;rsquo;m currently a software engineer at Embecosm. At Embecosm we work on the boundary of hardware, more specifically with compilers.</description></item><item><title>Syntax Directed Translation</title><link>https://pietraferreira.github.io/quartz/notes/general/syntax-directed-translation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/syntax-directed-translation/</guid><description>Syntax Directed Translation Use attribute grammars, where productions are supplemented with information to control semantic analysis and translation.
Associate attributes with each grammar symbol to describe its properties.</description></item><item><title>Sysroot</title><link>https://pietraferreira.github.io/quartz/notes/private/work/sysroot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/sysroot/</guid><description>Sysroot Any compiler needs to know where the standard headers, standard libraries, and the c-runtime are present. All of these are packaged together for each target (e.</description></item><item><title>Take Control of EIP</title><link>https://pietraferreira.github.io/quartz/notes/hacking/take-control-eip/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/take-control-eip/</guid><description>This is part of a guide that you can find here.
We need to get the instruction pointer (EIP) under control so we can tell it to which address to jump.</description></item><item><title>Task Hub</title><link>https://pietraferreira.github.io/quartz/notes/general/tasks/task-hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/tasks/task-hub/</guid><description>Tasks For Today 1 2 not done due today Available Tasks 1 2 not done path does not include private/ Completed 1 done</description></item><item><title>Testing Relaxation - COREV</title><link>https://pietraferreira.github.io/quartz/notes/private/work/testing-relaxation-corev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/testing-relaxation-corev/</guid><description>readelf -r on .o files -&amp;gt; looks for particular relocations -&amp;gt; instead of -a it checks if we&amp;rsquo;re getting the right relocation</description></item><item><title>The Software Process</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/the-software-process/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/the-software-process/</guid><description>The software process is a structured set of activities required to develop a software system.
Three main models:
Waterfall model.</description></item><item><title>Three Address Code</title><link>https://pietraferreira.github.io/quartz/notes/private/work/three-address-code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/three-address-code/</guid><description>Three Address Code Parse trees are sometimes used in early stages of compilers.
They are not ideal for optimisation.</description></item><item><title>Tiger</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/tiger/tiger-hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/tiger/tiger-hub/</guid><description>Cheatsheet Notes 1 2 3 4 5 table without ID file.link as &amp;#34;Link&amp;#34;, file.ctime as &amp;#34;Created Time&amp;#34; from #work/tiger WHERE type = &amp;#34;cheatsheet&amp;#34; sort file.</description></item><item><title>Tiger - Sync-up</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/tiger/2020-11-18-tiger-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/tiger/2020-11-18-tiger-meeting/</guid><description>Paolo been working on testing. He has TIGER/toolchain/gcc-test-scan, inside he has folders with errors for practicality. First take the directories from Jenkins and run the script.</description></item><item><title>Tiger Optimisation (memset/memcpy)</title><link>https://pietraferreira.github.io/quartz/notes/private/work/tiger-optimisation-memset-memcpy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/tiger-optimisation-memset-memcpy/</guid><description>Optimising expansion of memcpy/memset using hardware loops Currently memcpy and memset get expanded to a list of stores and loads for small sized values.</description></item><item><title>Time Complexity</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/time-complexity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/time-complexity/</guid><description>Sorting It is one of the most common tasks in data analysis.
Examples:
Print out a collection of employees sorted by salary.</description></item><item><title>Titan Simulator Meeting</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/tiger/2021-08-05-titan-simulator-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/tiger/2021-08-05-titan-simulator-meeting/</guid><description>The source code is in the LLVM project: BSCSimulator.cpp.
Central to this is the include file: BSCGenRegisterInfo.</description></item><item><title>Tmux Cheatsheet</title><link>https://pietraferreira.github.io/quartz/notes/general/tmux-cheatsheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/tmux-cheatsheet/</guid><description>Tmux Cheatsheet tmux is a terminal multiplexer: it enables a number of terminals to be created, accessed, and controlled from a single screen.</description></item><item><title>Trees</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/trees/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/trees/</guid><description>Trees Abstract data type that represents a hierarchical tree structure with a set of connected nodes. Each node in the tree can be connected to many children (depending on the type of tree), but must be connected to exactly one parent, except for the root node, which has no parent.</description></item><item><title>TryHackMe - Encryption 101</title><link>https://pietraferreira.github.io/quartz/notes/hacking/thm-encryption101/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/thm-encryption101/</guid><description>Encryption - Crypto 101 Ciphertext - The result of encrypting a plain text, encrypted data
Cipher - A method of encrypting or decrypting data.</description></item><item><title>TryHackMe - Metasploit</title><link>https://pietraferreira.github.io/quartz/notes/hacking/thm-metasploit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/hacking/thm-metasploit/</guid><description>Metasploit Docs: https://docs.metasploit.com/
Metasploit is the most widely used exploitation framework. Metasploit is a powerful tool that can support all phases of a penetration testing engagement, from information gathering to post-exploitation.</description></item><item><title>turing-machines</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/turing-machines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2004/turing-machines/</guid><description>Turing Machines Turning machine manipulate symbols on a strip of tape according to a table of rules and it is capable of implementing any computer algorithm.</description></item><item><title>UE Methods and Techniques - Prototyping, Mockups and Wireframes</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/ue-methods-and-techniques/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/ue-methods-and-techniques/</guid><description>The Sketch in Interaction Design Two requirements approaches when prototyping an interactive system:
Using a formal specification. Developing the specification out of the prototype.</description></item><item><title>UML - All-Together</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-all-together/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-all-together/</guid><description> Notation Elements</description></item><item><title>UML - Class Diagram</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-class-diagram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-class-diagram/</guid><description>Objects Individuals of a system:
Object Diagram The objects of a system and their relationships, snapshot of objects at a specific moment in time:</description></item><item><title>UML - Sequence Diagram</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-sequence-diagram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-sequence-diagram/</guid><description>Inter-object behaviour: interactions between objects.
Interaction: how data is exchanged between interaction partners.
Interaction partners: - Human (lectures, administrator, &amp;hellip;) - Non-human (sever, printer, executable software, &amp;hellip;)</description></item><item><title>UML @ Classroom - Chapter 3 (Creating a Use Case Diagram)</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/creating-a-use-case-diagram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/creating-a-use-case-diagram/</guid><description>This is continuation of my notes on Use Case Diagrams from the book UML @ Classroom.
The first step is to identify actors and use cases and then place them in relationships with one another.</description></item><item><title>UML @ Classroom - Chapter 3 (Use Case Diagram)</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-classroom-chap3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/uml-classroom-chap3/</guid><description>Use Case Diagram Allows to describe the possible usage scenarios (use cases) that a system is developed for. Doesn&amp;rsquo;t address realisation details, for example data structures or algorithms.</description></item><item><title>UML Class Diagram - Assignment</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2022-12-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2002/2022-12-14/</guid><description>Forum User -&amp;gt; Creates -&amp;gt; Forum
1 2 3 4 topicTitle : String ------------------- getTopic() : String getPost() (post : Post) : Post Post(s) Forum -&amp;gt; Has -&amp;gt; Post(s)</description></item><item><title>University of Bologna Meeting</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2021-08-13-uob-meeting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/2021-08-13-uob-meeting/</guid><description>University of Bologna Meeting They seem to be working on Immediate Branching
I reported that we finished all testing
Just Nazareno showed up.</description></item><item><title>Useful Commands Dump</title><link>https://pietraferreira.github.io/quartz/notes/private/work/useful-commands-dump/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/useful-commands-dump/</guid><description>Useful Commands Dump Well&amp;hellip; where I dump any useful commands I find and them hopefully I&amp;rsquo;ll categorise them&amp;hellip; eventually&amp;hellip;</description></item><item><title>User Models and Conceptual Design</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/user-models-and-conceptual-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/user-models-and-conceptual-design/</guid><description>Making Sense of the World Transparent objects expose their functions, for example a bicycle.
Opaque objects however, hide their functions.</description></item><item><title>User-Centred Design</title><link>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/user-centred-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/university/year2/cs2003/user-centred-design/</guid><description>It is important to ensure that we meet users needs, this is what user-centered design is all about.
The problem with traditional development is that:</description></item><item><title>Valid Anagram</title><link>https://pietraferreira.github.io/quartz/notes/general/valid-anagram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/valid-anagram/</guid><description>Intuition Get the frequencies from each String, then compare them and if 0 then it is an anagram.
Approach We keep track of the frequency of each letter in the two Strings.</description></item><item><title>Vectors and Arrays</title><link>https://pietraferreira.github.io/quartz/notes/general/vectors-arrays/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/vectors-arrays/</guid><description>Vectors and Arrays Vectors are typically 1-d whereas arrays can be multi-dimensional. in C/C++ they are indexed from zero.</description></item><item><title>Vim Cheatsheet</title><link>https://pietraferreira.github.io/quartz/notes/general/vim-cheatsheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/general/vim-cheatsheet/</guid><description>Vim Cheatsheet Thankfully I remember most of these but all of them are great :)
MD to PDF and MD to HTML are custom.</description></item><item><title>Work Hub</title><link>https://pietraferreira.github.io/quartz/notes/private/work/work-hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/work-hub/</guid><description>Work Hub Everything work related, mostly organised by project.
Useful Links Wiki Engineering Training Onboarding Guide for the OpenHW Group Project Hubs Engineer Training Relocation Handling Prototype (CORE-V) CORE-V Cobra Everest Tiger Talks 2020 Meetup Script Slides Facial Recognition - Coral Board Script Strode College Talk - About me Script</description></item><item><title>ZFinx Notes</title><link>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/zfinx-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pietraferreira.github.io/quartz/notes/private/work/projects/corev/zfinx-notes/</guid><description>ZFinx Notes Hi I&amp;rsquo;m Pietra, I&amp;rsquo;ve been looking at your problem with my colleagues Mary and Jessica. I&amp;rsquo;m wondering if there were any changes to the problem since we last spoke?</description></item></channel></rss>