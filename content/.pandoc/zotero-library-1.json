[
  {"id":"17GOALSSustainable","accessed":{"date-parts":[["2022",11,14]]},"citation-key":"17GOALSSustainable","title":"THE 17 GOALS | Sustainable Development","type":"webpage","URL":"https://sdgs.un.org/goals"},
  {"id":"agComponentsBusinessModel","abstract":"The business model canvas, invented by Alex Osterwalder of Strategyzer, is made up of nine building blocks showing the logic of how a company intends to deliver value and make money.","accessed":{"date-parts":[["2022",12,5]]},"author":[{"family":"AG","given":"Strategyzer"}],"citation-key":"agComponentsBusinessModel","language":"fr","title":"Components of Business Model Canvas Explained | Strategyzer","type":"webpage","URL":"https://www.strategyzer.com/business-model-canvas/building-blocks"},
  {"id":"AliasbasedFormulationBorrow","accessed":{"date-parts":[["2023",10,26]]},"citation-key":"AliasbasedFormulationBorrow","title":"An alias-based formulation of the borrow checker · baby steps","type":"webpage","URL":"https://smallcultfollowing.com/babysteps/blog/2018/04/27/an-alias-based-formulation-of-the-borrow-checker/"},
  {"id":"almeidaRustVizInteractivelyVisualizing2022","abstract":"Rust is an industrial systems programming language unique in achieving memory safety without the need for a garbage collector. Instead, Rust relies on a unique and sometimes subtle resource ownership and borrowing system. This system can make learning Rust a challenge, even for experienced programmers. Motivated by these challenges, we introduce RustViz, a tool that allows an instructor to generate custom interactive timelines depicting ownership and borrowing events alongside Rust code examples embedded within learning material. These visualizations makes visible the static events, and subsequent state changes, that a Rust programmer must otherwise track entirely mentally. We have used RustViz to build a week-long Rust unit in a large undergraduate programming languages course. We demonstrate that this learning material, and the RustViz visualizations in particular, were valuable to students and led to the development of an accurate mental model of the essentials of ownership and borrowing in Rust.","accessed":{"date-parts":[["2023",10,26]]},"author":[{"family":"Almeida","given":"Marcelo"},{"family":"Cole","given":"Grant"},{"family":"Du","given":"Ke"},{"family":"Luo","given":"Gongming"},{"family":"Pan","given":"Shulin"},{"family":"Pan","given":"Yu"},{"family":"Qiu","given":"Kai"},{"family":"Reddy","given":"Vishnu"},{"family":"Zhang","given":"Haochen"},{"family":"Zhu","given":"Yingying"},{"family":"Omar","given":"Cyrus"}],"citation-key":"almeidaRustVizInteractivelyVisualizing2022","container-title":"2022 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)","DOI":"10.1109/VL/HCC53370.2022.9833121","event-place":"Roma, Italy","event-title":"2022 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)","ISBN":"978-1-66544-214-5","issued":{"date-parts":[["2022",9,12]]},"language":"en","page":"1-10","publisher":"IEEE","publisher-place":"Roma, Italy","source":"DOI.org (Crossref)","title":"RustViz: Interactively Visualizing Ownership and Borrowing","title-short":"RustViz","type":"paper-conference","URL":"https://ieeexplore.ieee.org/document/9833121/"},
  {"id":"archiveItDigitalHeroin2016","abstract":"Susan* bought her 6-year-old son John an iPad when he was in first grade. “I thought, ‘Why not let him get a jump on things?’ ” she told me during a...","accessed":{"date-parts":[["2022",11,14]]},"author":[{"family":"Archive","given":"View Author"},{"family":"feed","given":"Get author RSS"}],"citation-key":"archiveItDigitalHeroin2016","issued":{"date-parts":[["2016",8,27]]},"language":"en-US","title":"It’s ‘digital heroin’: How screens turn kids into psychotic junkies","title-short":"It’s ‘digital heroin’","type":"post-weblog","URL":"https://nypost.com/2016/08/27/its-digital-heroin-how-screens-turn-kids-into-psychotic-junkies/"},
  {"id":"atlassianGitFeatureBranch","abstract":"A feature branch is a temporary branch used for development or testing purposes. Learn about the best way to manage them using this guide!","accessed":{"date-parts":[["2023",3,11]]},"author":[{"family":"Atlassian","given":""}],"citation-key":"atlassianGitFeatureBranch","container-title":"Atlassian","language":"en","title":"Git Feature Branch Workflow | Atlassian Git Tutorial","type":"webpage","URL":"https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow"},
  {"id":"bamizadehAnalyticalStudyCode2021","abstract":"Software development process involves developing, building and enhancing high-quality software for specific tasks and as a consequence generates considerable amount of data. This data can be managed in a systematic manner creating knowledge repositories that can be used to competitive advantage. Lesson's learned as part of the development process can also be part of the knowledge bank and can be used to advantage in subsequent projects by developers and software practitioners. Code smells are a group of symptoms which reveal that code is not good enough and requires some actions to have a cleansed code. Software metrics help to detect code smells while refactoring methods are used for removing them. Furthermore, various tools are applicable for detecting of code smells. A Code smell repository organizes all the available knowledge in the literature about code smells and related concepts. An analytical study of code smells is presented in this paper which extracts useful, actionable and indicative knowledge.","accessed":{"date-parts":[["2023",11,13]]},"author":[{"family":"Bamizadeh","given":"Lida"},{"family":"Kumar","given":"Binod"},{"family":"Kumar","given":"Ajay"},{"family":"Shirwaikar","given":"Shailaja"}],"citation-key":"bamizadehAnalyticalStudyCode2021","container-title":"Tehnički glasnik","container-title-short":"Teh. glas. (Online)","DOI":"10.31803/tg-20210205095410","ISSN":"18485588, 18466168","issue":"1","issued":{"date-parts":[["2021",3,4]]},"language":"en","page":"121-126","source":"DOI.org (Crossref)","title":"An Analytical Study of Code Smells","type":"article-journal","URL":"https://hrcak.srce.hr/253031","volume":"15"},
  {"id":"binderTestingObjectorientedSystems2000","author":[{"family":"Binder","given":"Robert"}],"call-number":"QA76.64 .B56 2000","citation-key":"binderTestingObjectorientedSystems2000","collection-title":"The Addison-Wesley object technology series","event-place":"Reading, Mass","ISBN":"978-0-201-80938-1","issued":{"date-parts":[["2000"]]},"number-of-pages":"1191","publisher":"Addison-Wesley","publisher-place":"Reading, Mass","source":"Library of Congress ISBN","title":"Testing object-oriented systems: models, patterns, and tools","title-short":"Testing object-oriented systems","type":"book"},
  {"id":"BorrowingRustExample","accessed":{"date-parts":[["2023",10,26]]},"citation-key":"BorrowingRustExample","title":"Borrowing - Rust By Example","type":"webpage","URL":"https://doc.rust-lang.org/rust-by-example/scope/borrow.html"},
  {"id":"brianclarkhowardRunningListAction2019","abstract":"The world is waking up to a crisis of ocean plastic—and we're tracking the developments and solutions as they happen.","accessed":{"date-parts":[["2023",3,11]]},"author":[{"literal":"Brian Clark Howard"},{"literal":"Sarah Gibbens"},{"literal":"Elaina Zachos"},{"literal":"Laura Parker"}],"citation-key":"brianclarkhowardRunningListAction2019","container-title":"Environment","issued":{"date-parts":[["2019",10,6]]},"language":"en","section":"Environment","title":"A running list of action on plastic pollution","type":"webpage","URL":"https://www.nationalgeographic.com/environment/article/ocean-plastic-pollution-solutions"},
  {"id":"cooperFaceEssentialsInteraction2007","author":[{"family":"Cooper","given":"Alan"},{"family":"Reimann","given":"Robert"},{"family":"Cronin","given":"Dave"},{"family":"Cooper","given":"Alan"}],"call-number":"QA76.9.U83 C6596 2007","citation-key":"cooperFaceEssentialsInteraction2007","edition":"[3rd ed.], Completely rev. & updated","event-place":"Indianapolis, IN","ISBN":"978-0-470-08411-3","issued":{"date-parts":[["2007"]]},"note":"OCLC: ocm82287038","number-of-pages":"610","publisher":"Wiley Pub","publisher-place":"Indianapolis, IN","source":"Library of Congress ISBN","title":"About face 3: the essentials of interaction design","title-short":"About face 3","type":"book"},
  {"id":"crichtonUsabilityOwnership2021","abstract":"Ownership is the concept of tracking aliases and mutations to data, useful for both memory safety and system design. The Rust programming language implements ownership via the borrow checker, a static analyzer that extends the core type system. The borrow checker is a notorious learning barrier for new Rust users. In this paper, I focus on the gap between understanding ownership in theory versus its implementation in the borrow checker. As a sound and incomplete analysis, compiler errors may arise from either ownership-unsound behavior or limitations of the analyzer. Understanding this distinction is essential for fixing ownership errors. But how are users actually supposed to make the correct inference? Drawing on my experience with using and teaching Rust, I explore the many challenges in interpreting and responding to ownership errors. I also suggest educational and automated interventions that could improve the usability of ownership.","accessed":{"date-parts":[["2023",10,26]]},"author":[{"family":"Crichton","given":"Will"}],"citation-key":"crichtonUsabilityOwnership2021","issued":{"date-parts":[["2021",9,22]]},"language":"en","number":"arXiv:2011.06171","publisher":"arXiv","source":"arXiv.org","title":"The Usability of Ownership","type":"article","URL":"http://arxiv.org/abs/2011.06171"},
  {"id":"DjangoDocumentation","abstract":"The web framework for perfectionists with deadlines.","accessed":{"date-parts":[["2023",3,11]]},"citation-key":"DjangoDocumentation","container-title":"Django Project","language":"en","title":"Django Documentation","type":"webpage","URL":"https://docs.djangoproject.com/en/4.1/"},
  {"id":"DjangoGirlsTutorial","accessed":{"date-parts":[["2023",3,11]]},"citation-key":"DjangoGirlsTutorial","title":"Django Girls Tutorial","type":"webpage","URL":"https://tutorial.djangogirls.org/en/"},
  {"id":"DjangoPackagesReusable","abstract":"Django Packages stores information on fetched packages and provides easy comparison tools for them. Public APIs include PyPI, GitHub, and BitBucket.","accessed":{"date-parts":[["2023",3,11]]},"citation-key":"DjangoPackagesReusable","container-title":"Django Packages","language":"en-us","title":"Django Packages : Reusable apps, sites and tools directory for Django","title-short":"Django Packages","type":"webpage","URL":"https://djangopackages.org/"},
  {"id":"DjangoRESTFramework","accessed":{"date-parts":[["2023",3,11]]},"citation-key":"DjangoRESTFramework","title":"Django REST Framework","type":"webpage","URL":"https://www.django-rest-framework.org/"},
  {"id":"DoDStandardInternet1980","accessed":{"date-parts":[["2022",12,3]]},"citation-key":"DoDStandardInternet1980","DOI":"10.17487/RFC0760","genre":"Request for Comments","issued":{"date-parts":[["1980",1]]},"number":"RFC 760","number-of-pages":"46","publisher":"Internet Engineering Task Force","source":"IETF","title":"DoD standard Internet Protocol","type":"report","URL":"https://datatracker.ietf.org/doc/rfc760"},
  {"id":"EmpathyMappingGuide","abstract":"An empathy map is a simple, easy-to-digest visual that captures knowledge about a user’s behaviors and attitudes. It is a useful tool to helps teams better understand their users. Empathy mapping is a simple workshop activity that can be done with stakeholders, marketing and sales, product development, or creative teams to build empathy for end users. For teams involved in the design and engineering of products, services, or experiences, an empathy mapping session is a great exercise for groups to “get inside the heads” of users.","accessed":{"date-parts":[["2022",12,5]]},"citation-key":"EmpathyMappingGuide","language":"en-US","title":"Empathy Mapping: A Guide to Getting Inside a User's Head | UX Booth","title-short":"Empathy Mapping","type":"post-weblog","URL":"https://www.uxbooth.com/articles/empathy-mapping-a-guide-to-getting-inside-a-users-head/"},
  {"id":"filpalguyUsingDiscordAgile2022","abstract":"In this last two years, there is a shift in the dynamics of working culture. Due to the appearance of Covid-19, many companies are forced to adapt their working culture from a office-based setup to…","accessed":{"date-parts":[["2022",12,5]]},"author":[{"literal":"FILPALGUY"}],"citation-key":"filpalguyUsingDiscordAgile2022","container-title":"FILPAL XPress","issued":{"date-parts":[["2022",2,13]]},"language":"en","title":"Using Discord in Agile Practices","type":"post-weblog","URL":"https://filpal.wordpress.com/2022/02/13/using-discord-in-agile-practices/"},
  {"id":"GitHubComHelp","abstract":"Get started, troubleshoot, and make the most of GitHub. Documentation for new users, developers, administrators, and all of GitHub's products.","accessed":{"date-parts":[["2023",3,18]]},"citation-key":"GitHubComHelp","container-title":"GitHub Docs","language":"en","title":"GitHub.com Help Documentation","type":"webpage","URL":"https://ghdocs-prod.azurewebsites.net/en"},
  {"id":"HomepageCS3003Software","accessed":{"date-parts":[["2023",11,13]]},"citation-key":"HomepageCS3003Software","title":"Homepage - CS3003 Software Engineering (A 2023/4)","type":"webpage","URL":"https://brightspace.brunel.ac.uk/d2l/home/43639"},
  {"id":"HowUseTrello","abstract":"Learn everything you need to set up Agile project management for Trello to get more flexible, adapt to changes faster, and build the iterative work process.","accessed":{"date-parts":[["2022",12,5]]},"citation-key":"HowUseTrello","language":"en","title":"How to use Trello for Agile Project Management","type":"webpage","URL":"https://planyway.com/blog/trello-agile-project-management"},
  {"id":"IBMDocumentation2022","abstract":"IBM Documentation.","accessed":{"date-parts":[["2022",12,3]]},"citation-key":"IBMDocumentation2022","issued":{"date-parts":[["2022",1,18]]},"language":"en-US","license":"© Copyright IBM Corporation 2022","title":"IBM Documentation","type":"webpage","URL":"https://prod.ibmdocs-production-dal-6099123ce774e592a519d7c33db8265e-0000.us-south.containers.appdomain.cloud/docs/en/aix/7.2?topic=i-ifconfig-command"},
  {"id":"JavaDocumentation","abstract":"Java is the foundation for virtually every type of networked application and is the global standard for developing and delivering mobile applications, games, Web-based content, and enterprise software.","accessed":{"date-parts":[["2023",11,1]]},"citation-key":"JavaDocumentation","container-title":"Oracle Help Center","language":"en","title":"Java Documentation","type":"webpage","URL":"https://docs.oracle.com/en/java/"},
  {"id":"JavaNetworking2021","abstract":"A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.","accessed":{"date-parts":[["2023",11,1]]},"citation-key":"JavaNetworking2021","container-title":"GeeksforGeeks","issued":{"date-parts":[["2021",9,3]]},"language":"en-US","section":"Java","title":"Java Networking","type":"post-weblog","URL":"https://www.geeksforgeeks.org/java-networking/"},
  {"id":"jungUnderstandingEvolvingRust","author":[{"family":"Jung","given":"Ralf"}],"citation-key":"jungUnderstandingEvolvingRust","language":"de","source":"Zotero","title":"Understanding and Evolving the Rust Programming Language","type":"article-journal"},
  {"id":"kuroseComputerNetworkingTopDown2016","abstract":"For courses in Networking/CommunicationsMotivates readers with a top-down, layered approach to computer networkingUnique among computer networking texts, the Seventh Edition of the popular Computer Networking: A Top Down Approach builds on the author’s long tradition of teaching this complex subject through a layered approach in a “top-down manner.” The text works its way from the application layer down toward the physical layer, motivating readers by exposing them to important concepts early in their study of networking. Focusing on the Internet and the fundamentally important issues of networking, this text provides an excellent foundation for readers interested in computer science and electrical engineering, without requiring extensive knowledge of programming or mathematics. The Seventh Edition has been updated to reflect the most important and exciting recent advances in networking.","author":[{"family":"Kurose","given":"James"},{"family":"Ross","given":"Keith"}],"citation-key":"kuroseComputerNetworkingTopDown2016","edition":"7th edition","event-place":"Boston","ISBN":"978-0-13-359414-0","issued":{"date-parts":[["2016",4,26]]},"language":"English","number-of-pages":"864","publisher":"Pearson","publisher-place":"Boston","source":"Amazon","title":"Computer Networking: A Top-Down Approach","title-short":"Computer Networking","type":"book"},
  {"id":"lamIdentifyingGapsSecure2022","abstract":"Often, security topics are only taught in advanced computer science (CS) courses. However, most US R1 universities do not require students to take these courses to complete an undergraduate CS degree. As a result, students can graduate without learning about computer security and secure programming practices. To gauge students’ knowledge and skills of secure programming, we conducted a coding interview with 21 students from two R1 universities in the United States. All the students in our study had at least taken Computer Systems or an equivalent course. We then analyzed the students’ approach to safe programming practices, such as avoiding unsafe functions like gets and strcpy, and basic security knowledge, such as writing code that assumes user inputs can be malicious. Our results suggest that students lack the key fundamental skills to write secure programs. For example, students rarely pay attention to details, such as compiler warnings, and often do not read programming language documentation with care. Moreover, some students’ understanding of memory layout is cursory, which is crucial for writing secure programs. We also found that some students are struggling with even the basics of C programming, even though it is the main language taught in Computer Systems courses.","accessed":{"date-parts":[["2023",10,26]]},"author":[{"family":"Lam","given":"Jessica"},{"family":"Fang","given":"Elias"},{"family":"Almansoori","given":"Majed"},{"family":"Chatterjee","given":"Rahul"},{"family":"Soosai Raj","given":"Adalbert Gerald"}],"citation-key":"lamIdentifyingGapsSecure2022","container-title":"Proceedings of the 53rd ACM Technical Symposium on Computer Science Education","DOI":"10.1145/3478431.3499391","event-place":"Providence RI USA","event-title":"SIGCSE 2022: The 53rd ACM Technical Symposium on Computer Science Education","ISBN":"978-1-4503-9070-5","issued":{"date-parts":[["2022",2,22]]},"language":"en","page":"703-709","publisher":"ACM","publisher-place":"Providence RI USA","source":"DOI.org (Crossref)","title":"Identifying Gaps in the Secure Programming Knowledge and Skills of Students","type":"paper-conference","URL":"https://dl.acm.org/doi/10.1145/3478431.3499391"},
  {"id":"leonAnswerWhichTwo2016","accessed":{"date-parts":[["2023",11,13]]},"author":[{"family":"Leon","given":"Ricardo"}],"citation-key":"leonAnswerWhichTwo2016","container-title":"Stack Overflow","issued":{"date-parts":[["2016",8,18]]},"title":"Answer to \"Which of the two metrics DIT (Depth of Inheritance) or NOC (Number of Children) would be more problematic?\"","title-short":"Answer to \"Which of the two metrics DIT (Depth of Inheritance) or NOC (Number of Children) would be more problematic?","type":"post","URL":"https://stackoverflow.com/a/39028650"},
  {"id":"lowgrenThoughtfulInteractionDesign2007","author":[{"family":"Löwgren","given":"Jonas"},{"family":"Stolterman","given":"Erik"}],"citation-key":"lowgrenThoughtfulInteractionDesign2007","edition":"1. paperback ed","event-place":"Cambridge, Mass.","ISBN":"978-0-262-62209-7","issued":{"date-parts":[["2007"]]},"language":"eng","number-of-pages":"198","publisher":"MIT Press","publisher-place":"Cambridge, Mass.","source":"K10plus ISBN","title":"Thoughtful interaction design: a design perspective on information technology","title-short":"Thoughtful interaction design","type":"book"},
  {"id":"ManageYourTeam","accessed":{"date-parts":[["2023",3,18]]},"citation-key":"ManageYourTeam","title":"Manage Your Team’s Projects From Anywhere | Trello","type":"webpage","URL":"https://trello.com/"},
  {"id":"MarineLitterEducation","accessed":{"date-parts":[["2022",11,14]]},"citation-key":"MarineLitterEducation","title":"Marine litter education boosts children’s understanding and self-reported actions - ScienceDirect","type":"webpage","URL":"https://www.sciencedirect.com/science/article/pii/S0025326X14007334"},
  {"id":"MarinePollutionNational","accessed":{"date-parts":[["2022",11,14]]},"citation-key":"MarinePollutionNational","title":"Marine Pollution | National Geographic Society","type":"webpage","URL":"https://education.nationalgeographic.org/resource/marine-pollution"},
  {"id":"mikejo5000CodeMetricsDepth2022","abstract":"Learn about the depth of inheritance metric for code metrics in Visual Studio.","accessed":{"date-parts":[["2023",11,13]]},"author":[{"family":"Mikejo5000","given":""}],"citation-key":"mikejo5000CodeMetricsDepth2022","issued":{"date-parts":[["2022",4,30]]},"language":"en-us","title":"Code metrics - Depth of inheritance - Visual Studio (Windows)","type":"webpage","URL":"https://learn.microsoft.com/en-us/visualstudio/code-quality/code-metrics-depth-of-inheritance?view=vs-2022"},
  {"id":"myersArtSoftwareTesting2012","author":[{"family":"Myers","given":"Glenford J."},{"family":"Sandler","given":"Corey"},{"family":"Badgett","given":"Tom"}],"call-number":"QA76.76.T48 M894 2012","citation-key":"myersArtSoftwareTesting2012","edition":"3rd ed","event-place":"Hoboken, N.J","ISBN":"978-1-118-03196-4 978-1-118-13313-2 978-1-118-13314-9","issued":{"date-parts":[["2012"]]},"note":"OCLC: ocn728656684","number-of-pages":"240","publisher":"John Wiley & Sons","publisher-place":"Hoboken, N.J","source":"Library of Congress ISBN","title":"The art of software testing","type":"book"},
  {"id":"NetstatLinuxMan","accessed":{"date-parts":[["2022",12,3]]},"citation-key":"NetstatLinuxMan","title":"netstat(8) - Linux man page","type":"webpage","URL":"https://linux.die.net/man/8/netstat"},
  {"id":"NewStudyFinds","accessed":{"date-parts":[["2022",11,14]]},"citation-key":"NewStudyFinds","title":"New Study Finds Ocean Pollution a Threat to Human Health","type":"webpage","URL":"https://www.niehs.nih.gov/research/programs/geh/geh_newsletter/2021/2/articles/new_study_finds_ocean_pollution_a_threat_to_human_health.cfm"},
  {"id":"ObjectOrientedMetrics2021","abstract":"A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.","accessed":{"date-parts":[["2023",11,13]]},"citation-key":"ObjectOrientedMetrics2021","container-title":"GeeksforGeeks","issued":{"date-parts":[["2021",1,11]]},"language":"en-US","section":"Software Engineering","title":"Object Oriented Metrics in Software Engineering","type":"post-weblog","URL":"https://www.geeksforgeeks.org/object-oriented-metrices-in-software-engineering/"},
  {"id":"pearceLightweightFormalismReference2021","abstract":"Rust is a relatively new programming language that has gained significant traction since its v1.0 release in 2015. Rust aims to be a systems language that competes with C/C++. A claimed advantage of Rust is a strong focus on memory safety without garbage collection. This is primarily achieved through two concepts, namely,\n              reference lifetimes\n              and\n              borrowing\n              . Both of these are well-known ideas stemming from the literature on\n              region-based memory management\n              and\n              linearity\n              /\n              uniqueness\n              . Rust brings both of these ideas together to form a coherent programming model. Furthermore, Rust has a strong focus on stack-allocated data and, like C/C++ but unlike Java, permits references to local variables.\n            \n            \n              Type checking in Rust can be viewed as a two-phase process: First, a traditional type checker operates in a flow-insensitive fashion; second, a\n              borrow checker\n              enforces an ownership invariant using a flow-sensitive analysis. In this article, we present a lightweight formalism that captures these two phases using a flow-sensitive type system that enforces “\n              type and borrow safety\n              .” In particular, programs that are type and borrow safe will not attempt to dereference dangling pointers. Our calculus core captures many aspects of Rust, including copy- and move-semantics, mutable borrowing, reborrowing, partial moves, and lifetimes. In particular, it remains sufficiently lightweight to be easily digested and understood and, we argue, still captures the salient aspects of reference lifetimes and borrowing. Furthermore, extensions to the core can easily add more complex features (e.g., control-flow, tuples, method invocation). We provide a soundness proof to verify our key claims of the calculus. We also provide a reference implementation in Java with which we have model checked our calculus using over 500B input programs. We have also fuzz tested the Rust compiler using our calculus against 2B programs and, to date, found one confirmed compiler bug and several other possible issues.","accessed":{"date-parts":[["2023",10,26]]},"author":[{"family":"Pearce","given":"David J."}],"citation-key":"pearceLightweightFormalismReference2021","container-title":"ACM Transactions on Programming Languages and Systems","container-title-short":"ACM Trans. Program. Lang. Syst.","DOI":"10.1145/3443420","ISSN":"0164-0925, 1558-4593","issue":"1","issued":{"date-parts":[["2021",3,31]]},"language":"en","page":"1-73","source":"DOI.org (Crossref)","title":"A Lightweight Formalism for Reference Lifetimes and Borrowing in Rust","type":"article-journal","URL":"https://dl.acm.org/doi/10.1145/3443420","volume":"43"},
  {"id":"PingLinuxMan","accessed":{"date-parts":[["2022",12,3]]},"citation-key":"PingLinuxMan","title":"ping(8) - Linux man page","type":"webpage","URL":"https://linux.die.net/man/8/ping"},
  {"id":"PlasticPollutionFacts","accessed":{"date-parts":[["2022",11,14]]},"citation-key":"PlasticPollutionFacts","container-title":"Surfers Against Sewage","language":"en-GB","title":"Plastic Pollution - Facts and Figures • Surfers Against Sewage","type":"post-weblog","URL":"https://www.sas.org.uk/our-work/plastic-pollution/plastic-pollution-facts-figures/"},
  {"id":"PrivilegeEscalationTactic","accessed":{"date-parts":[["2022",12,3]]},"citation-key":"PrivilegeEscalationTactic","title":"Privilege Escalation, Tactic TA0004 - Enterprise | MITRE ATT&CK®","type":"webpage","URL":"https://attack.mitre.org/tactics/TA0004/"},
  {"id":"ProjectMetricsHelp","accessed":{"date-parts":[["2023",11,13]]},"citation-key":"ProjectMetricsHelp","title":"Project Metrics Help - Chidamber & Kemerer object-oriented metrics suite","type":"webpage","URL":"https://www.aivosto.com/project/help/pm-oo-ck.html"},
  {"id":"RaceConditionVulnerability2020","abstract":"A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.","accessed":{"date-parts":[["2023",11,21]]},"citation-key":"RaceConditionVulnerability2020","container-title":"GeeksforGeeks","issued":{"date-parts":[["2020",12,20]]},"language":"en-US","section":"Operating Systems","title":"Race Condition Vulnerability","type":"post-weblog","URL":"https://www.geeksforgeeks.org/race-condition-vulnerability/"},
  {"id":"Reading23Locks","accessed":{"date-parts":[["2023",11,1]]},"citation-key":"Reading23Locks","title":"Reading 23: Locks and Synchronization","type":"webpage","URL":"https://web.mit.edu/6.005/www/fa15/classes/23-locks/"},
  {"id":"ReferencesBorrowingRust","accessed":{"date-parts":[["2023",10,26]]},"citation-key":"ReferencesBorrowingRust","title":"References and Borrowing - The Rust Programming Language","type":"webpage","URL":"https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html"},
  {"id":"rustRustEduWorkshop20222022","abstract":"Cyrus Omar describes RustViz, a tool for annotating Rust code that can provide compiler-assisted visualization of ownership and borrowing patterns. RustViz was developed in conjunction with a large number of undergrad students, and has proven to be a successful teaching tool.\n\nThe RustViz source code is available at https://github.com/rustviz/rustviz. A full paper describing RustViz is available at https://web.eecs.umich.edu/~comar/rus....","accessed":{"date-parts":[["2023",10,26]]},"citation-key":"rustRustEduWorkshop20222022","dimensions":"21:11","director":[{"literal":"Rust"}],"issued":{"date-parts":[["2022",9,4]]},"source":"YouTube","title":"RustEdu Workshop 2022 - RustViz: Interactively Visualizing Ownership and Borrowing","title-short":"RustEdu Workshop 2022 - RustViz","type":"motion_picture","URL":"https://www.youtube.com/watch?v=zCF8QVkc6IY"},
  {"id":"RustViz2023","abstract":"Interactively Visualizing Ownership and Borrowing for Rust","accessed":{"date-parts":[["2023",10,26]]},"citation-key":"RustViz2023","genre":"HTML","issued":{"date-parts":[["2023",10,26]]},"license":"MIT","original-date":{"date-parts":[["2020",10,5]]},"publisher":"rustviz","source":"GitHub","title":"RustViz","type":"software","URL":"https://github.com/rustviz/rustviz"},
  {"id":"RustvizGoogleSearch","accessed":{"date-parts":[["2023",10,26]]},"citation-key":"RustvizGoogleSearch","title":"rustviz - Google Search","type":"webpage","URL":"https://www.google.com/search?client=firefox-b-d&q=rustviz"},
  {"id":"tanenbaumComputerNetworksGlobal2021","abstract":"For coursesin Business Data Communication and Networking. Anintroduction to computer networking grounded in real-world examples In Computer Networks,Tanenbaum et al. explain how networks work from the inside out. They start withthe physical layer of networking, computer hardware and transmission systems,then work their way up to network applications. Each chapter follows aconsistent approach: The book presents key principles, then illustrates themutilizing real-world example networks that run through the entire book - theInternet, and wireless networks, including Wireless LANs, broadband wireless,and Bluetooth. The 6th Edition is updated throughout to reflect the mostcurrent technologies, and the chapter on network security is rewritten to focuson modern security principles and actions. Tutorial videos on key networkingtopics and techniques are available to students on the companion website at www.pearsonglobaleditions.com Instructors are supported with a SolutionsManual to end-of-chapter exercises featured in the book, LecturePowerPoint slides, and extracted art and figures featured in thebook.","accessed":{"date-parts":[["2023",11,1]]},"author":[{"family":"Tanenbaum","given":"Andrew"},{"family":"Feamster","given":"Nick"},{"family":"Wetherall","given":"David"},{"family":"Tanenbaum","given":"Andrew"},{"family":"Feamster","given":"Nick"},{"family":"Wetherall","given":"David"},{"family":"Tanenbaum","given":"Andrew"},{"family":"Feamster","given":"Nick"},{"family":"Wetherall","given":"David"}],"citation-key":"tanenbaumComputerNetworksGlobal2021","event-place":"Harlow, UNITED KINGDOM","ISBN":"978-1-292-37401-7","issued":{"date-parts":[["2021"]]},"publisher":"Pearson Education, Limited","publisher-place":"Harlow, UNITED KINGDOM","source":"ProQuest Ebook Central","title":"Computer Networks, Global Edition","type":"book","URL":"http://ebookcentral.proquest.com/lib/brunelu/detail.action?docID=6432022"},
  {"id":"UserJourneyMap","abstract":"A user journey map (also known as a customer journey map) is a diagram that visually illustrates the user flow through your site.","accessed":{"date-parts":[["2022",12,5]]},"citation-key":"UserJourneyMap","container-title":"Optimizely","language":"en","title":"User journey map","type":"webpage","URL":"https://www.optimizely.com/optimization-glossary/user-journey-map/"},
  {"id":"VirtualMachinerySidebar","accessed":{"date-parts":[["2023",11,13]]},"citation-key":"VirtualMachinerySidebar","title":"Virtual Machinery - Sidebar 3 - WMC, CBO, RFC, LCOM, DIT, NOC - 'The Chidamber and Kemerer Metrics'","type":"webpage","URL":"http://www.virtualmachinery.com/sidebar3.htm"},
  {"id":"WiresharkGoDeep","accessed":{"date-parts":[["2022",12,3]]},"citation-key":"WiresharkGoDeep","title":"Wireshark · Go Deep.","type":"webpage","URL":"https://www.wireshark.org/"},
  {"id":"youngInternetAddictionHandbook2011","abstract":"\"Internet addiction is an emergent disorder in the psychiatric and psychological fields. This book provides a theoretical framework to understand how to define and conceptualize compulsive use of the Internet from a clinical perspective. With various theoretical models from the psychiatric, psychological, communication, and sociological fields, it explores the prevalence of the disorder and the most addictive or problematic online applications, such as online pornography, Internet gambling, and online games. Evidenced-based treatment approaches are provided as well. A must-have for every clinician\"--Provided by publisher","call-number":"RC569.5.I54 I53 2011","citation-key":"youngInternetAddictionHandbook2011","editor":[{"family":"Young","given":"Kimberly S."},{"family":"Abreu","given":"Cristiano Nabuco","dropping-particle":"de"}],"event-place":"Hoboken, NJ","ISBN":"978-0-470-55116-5","issued":{"date-parts":[["2011"]]},"number-of-pages":"289","publisher":"John Wiley & Sons","publisher-place":"Hoboken, NJ","source":"Library of Congress ISBN","title":"Internet addiction: a handbook and guide to evaluation and treatment","title-short":"Internet addiction","type":"book"},
  {"id":"zhuLearningProgrammingChallenges2022","abstract":"Rust is a young systems programming language designed to provide both the safety guarantees of high-level languages and the execution performance of low-level languages. To achieve this design goal, Rust provides a suite of safety rules and checks against those rules at the compile time to eliminate many memory-safety and thread-safety issues. Due to its safety and performance, Rust’s popularity has increased significantly in recent years, and it has already been adopted to build many safety-critical software systems. It is critical to understand the learning and programming challenges imposed by Rust’s safety rules. For this purpose, we first conducted an empirical study through close, manual inspection of 100 Rust-related Stack Overflow questions. We sought to understand (1) what safety rules are challenging to learn and program with, (2) under which contexts a safety rule becomes more difficult to apply, and (3) whether the Rust compiler is sufficiently helpful in debugging safety-rule violations. We then performed an online survey with 101 Rust programmers to validate the findings of the empirical study. We invited participants to evaluate program variants that differ from each other, either in terms of violated safety rules or the code constructs involved in the violation, and compared the participants’ performance on the variants. Our mixed-methods investigation revealed a range of consistent findings that can benefit Rust learners, practitioners, and language designers.","accessed":{"date-parts":[["2023",10,26]]},"author":[{"family":"Zhu","given":"Shuofei"},{"family":"Zhang","given":"Ziyi"},{"family":"Qin","given":"Boqin"},{"family":"Xiong","given":"Aiping"},{"family":"Song","given":"Linhai"}],"citation-key":"zhuLearningProgrammingChallenges2022","container-title":"Proceedings of the 44th International Conference on Software Engineering","DOI":"10.1145/3510003.3510164","event-place":"Pittsburgh Pennsylvania","event-title":"ICSE '22: 44th International Conference on Software Engineering","ISBN":"978-1-4503-9221-1","issued":{"date-parts":[["2022",5,21]]},"language":"en","page":"1269-1281","publisher":"ACM","publisher-place":"Pittsburgh Pennsylvania","source":"DOI.org (Crossref)","title":"Learning and programming challenges of rust: a mixed-methods study","title-short":"Learning and programming challenges of rust","type":"paper-conference","URL":"https://dl.acm.org/doi/10.1145/3510003.3510164"}
]
